#!/usr/bin/env bash
#
# OPTIMIZED Pre-commit Hook
# Fast checks only - heavy checks moved to pre-push/CI
#

set -e

# Colors
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "${BLUE}🔍 Running fast pre-commit checks...${NC}"

REPO_ROOT="$(git rev-parse --show-toplevel)"
cd "$REPO_ROOT"

# 1. Protected Files Check (FAST - essential)
echo -e "${BLUE}   Checking protected files...${NC}"
if npx tsx scripts/check-protected-files.ts >/dev/null 2>&1; then
    echo -e "${GREEN}   ✅ Protected files check passed${NC}"
else
    echo -e "${RED}   ❌ Protected files modified${NC}"
    echo -e "${YELLOW}💡 Use ALLOW_PROTECTED_EDIT=1 git commit to bypass${NC}"
    exit 1
fi

# 2. TypeScript Quick Check (FAST - staged files only)
echo -e "${BLUE}   Quick TypeScript check...${NC}"
STAGED_TS_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(ts|tsx)$' || true)
if [ -n "$STAGED_TS_FILES" ]; then
    if npm run typecheck >/dev/null 2>&1; then
        echo -e "${GREEN}   ✅ TypeScript passed${NC}"
    else
        echo -e "${YELLOW}   ⚠️  TypeScript warnings (non-blocking)${NC}"
        echo -e "${YELLOW}💡 Run: npm run fix${NC}"
    fi
else
    echo -e "${GREEN}   ✅ No TypeScript files changed${NC}"
fi

# 3. ESLint Quick Check (FAST - staged files only)
echo -e "${BLUE}   Quick ESLint check...${NC}"
STAGED_LINT_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(ts|tsx|js|jsx)$' || true)
if [ -n "$STAGED_LINT_FILES" ]; then
    if npx eslint $STAGED_LINT_FILES --max-warnings=10 >/dev/null 2>&1; then
        echo -e "${GREEN}   ✅ ESLint passed${NC}"
    else
        echo -e "${YELLOW}   ⚠️  ESLint warnings (non-blocking)${NC}"
        echo -e "${YELLOW}💡 Run: npm run lint:fix${NC}"
    fi
else
    echo -e "${GREEN}   ✅ No lint files changed${NC}"
fi

echo -e "\n${GREEN}🎉 Fast checks passed! Committing...${NC}"
echo -e "${BLUE}💡 Full tests will run on push or in CI${NC}"
exit 0
