{
  "name": "meta-adaptive-expert-orchestration",
  "version": "1.0.2",
  "description": "AI-powered QA generation using 8-Agent collaboration",
  "main": "dist/cli/main.js",
  "type": "module",
  "scripts": {
    "build": "tsc",
    "baseline:tsnode": "node --loader ts-node/esm scripts/metrics/baselineCli.ts",
    "baseline:bundle": "esbuild scripts/metrics/baselineCli.ts --bundle --platform=node --format=esm --outfile=scripts/metrics/dist/baselineCli.mjs",
    "baseline:run:bundle": "node scripts/metrics/dist/baselineCli.mjs",
    "build:export": "tsc -p tsconfig.export.json",
    "dev": "tsx src/cli/main.ts",
    "replit:start": "bash main.sh",
    "replit:install": "cd backend && npm install && cd ../apps/fe-web && npm install",
    "test": "vitest --run",
    "test:watch": "vitest",
    "test:coverage": "vitest --run --coverage",
    "test:ui": "vitest --ui",
    "test:e2e": "playwright test",
    "test:integration": "vitest --run tests/integration",
    "test:unit": "vitest --run tests/unit",
    "coverage:report": "vitest --run --coverage --reporter=html",
    "coverage:check": "vitest --run --coverage --coverage.thresholds.statements=80 --coverage.thresholds.branches=80 --coverage.thresholds.functions=80 --coverage.thresholds.lines=80",
    "lint": "eslint 'src/**/*.ts'",
    "lint:fix": "eslint 'src/**/*.ts' --fix",
    "format": "prettier --write .",
    "start": "node dist/cli/main.js",
    "start:cli": "node dist/cli/main.js --help",
    "demo": "node dist/cli/main.js --demo",
    "cli:help": "node dist/cli/main.js --help",
    "docs:systemmap": "node --loader ts-node/esm scripts/generate_system_map.ts",
    "docs:indexes": "node --loader ts-node/esm scripts/build_docs_indexes.ts",
    "docs:refresh": "npm run docs:systemmap && npm run docs:indexes",
    "report:last": "node cli/report-last.ts",
    "annotate:run": "node cli/annotate-run.ts",
    "feedback:apply": "node cli/apply-feedback.ts",
    "safe:show": "node cli/safe-show.cjs",
    "safe:dryrun": "node cli/safe-dryrun.cjs",
    "docs:status": "bash scripts/check-docs-freshness.sh",
    "docs:touch": "node cli/docs-touch.cjs",
    "eval:mini": "node tools/eval_mini.js",
    "regression:mini": "node tools/run_regression.mjs --target step4_2 --mode smoke --offline",
    "regression:extended": "node tools/run_regression.mjs --extended",
    "report:baseline": "node dist/scripts/metrics/baselineReportGenerator.js --render-md",
    "report:export": "node dist/scripts/metrics/baselineReportGenerator.js --export --validate",
    "regression:freeze": "node tools/run_regression.mjs --freeze",
    "tickets:list": "ls -1 dev/tickets | sed 's/^/- /'",
    "log:sample": "node tools/run_logger.js '{\"run_id\":\"sample\",\"routing_path\":\"rag\",\"quality_score\":8.7,\"p95_ms\":2400,\"cost\":0.0012,\"cost_cap_hit\":0,\"citation_presence\":1,\"snippet_alignment\":0.93,\"failure_class\":\"-\"}'",
    "route:seed": "node tools/seed_route.js",
    "demo:cit": "node tools/citation_demo_run.js",
    "demo:orch:cit": "node tools/orchestrator_cit_hook_demo.js",
    "eval:p13": "node tools/eval_runner_p13.js",
    "eval:p13:multi": "node tools/eval_runner_multi_p13.js",
    "handoff": "scripts/handoff",
    "system:map": "npm run docs:systemmap && echo \"📍 System map generated in docs/SYSTEM_ARCHITECTURE_MAP.md\"",
    "typecheck": "tsc -p tsconfig.build.json --noEmit",
    "ab-test": "tsx src/cli/abTestRunner.ts",
    "ab-test:list": "tsx src/cli/abTestRunner.ts list",
    "ab-test:quality": "tsx src/cli/abTestRunner.ts batch test-configs/quality-comparison.json",
    "ab-test:performance": "tsx src/cli/abTestRunner.ts batch test-configs/performance-test.json",
    "ab-test:compare": "tsx src/cli/abTestRunner.ts compare conservative,balanced,comprehensive",
    "web:open": "node -e \"require('child_process').exec(process.platform==='darwin'?'open apps/fe-web/review/index.html':(process.platform==='win32'?'start apps/fe-web/review/index.html':'xdg-open apps/fe-web/review/index.html'))\"",
    "dev:demo": "tsx src/cli/main.ts",
    "run:min": "node -r dotenv/config node_modules/.bin/tsx src/orchestrator/min_loop.ts",
    "run:min+commit": "npm run -s run:min && scripts/post_run_commit.sh \"feat(run): QA gen & audit update\"",
    "run:min+autocommit": "AUTO_COMMIT=true npm run -s run:min && scripts/post_run_commit.sh \"feat(run): QA gen & audit update\"",
    "guard:env": "bash scripts/validate-environment.sh",
    "guard:no-direct-http": "bash scripts/forbidden-direct-http.sh",
    "guard:prod": "bash -c './run_v3.sh __validate_prod_guard --check-only'",
    "guard:toolchain": "bash tools/validate_toolchain.sh --strict",
    "guard:all": "npm run guard:env && npm run guard:toolchain && npm run smoke && npm run guard:prod && npm run guard:git && npm run schema && npm run guard:no-direct-http && npm run regression:mini",
    "guard:git": "bash scripts/scan_secrets.sh",
    "security:audit": "bash scripts/security-audit.sh",
    "hygiene:clean": "bash scripts/cleanup_backups.sh",
    "snapshot:commit": "bash scripts/snapshot_commit.sh",
    "smoke": "OFFLINE_MODE=true bash tools/anthropic_client.sh --smoke",
    "schema": "node tools/validate_schema.mjs",
    "dx:smoke": "npx tsx scripts/dx/cli.ts run --profile dev --budget 0.50",
    "dx:full": "npx tsx scripts/dx/cli.ts run --profile stage --budget 2.00 --autocalib --approve",
    "dx:approve": "npx tsx scripts/dx/cli.ts run --profile stage --budget 1.00 --autocalib --approve",
    "dx:report": "npx tsx scripts/dx/cli.ts report",
    "verify:obs": "node dist/scripts/ci/check_observability_consistency.js --session reports/session_report.md --obs 'reports/observability/**/index.html' --logs RUN_LOGS",
    "verify:handoff": "node dist/scripts/ci/verify_bundle_contents.js --root . --mode handoff",
    "verify:export": "node dist/scripts/ci/verify_bundle_contents.js --root . --mode export",
    "preflight": "npm run typecheck && npm run lint && node dist/scripts/preflight_pack.js --profile stage --budget-smoke 2.00 --budget-full 50.00 --run-tags preflight",
    "taxo:check": "node dist/scripts/ci/check_taxonomy_consistency.js --roots 'src,scripts,validators,reports,.claude/commands,docs' --session reports/session_report.md --schema validators/session_report.schema.json --obs_glob 'reports/observability/**/index.html'",
    "taxo:fix:dry": "node dist/scripts/ci/fix_taxonomy_labels.js --roots 'src,scripts,.claude/commands,reports,docs' --dry",
    "taxo:fix": "node dist/scripts/ci/fix_taxonomy_labels.js --roots 'src,scripts,.claude/commands,reports,docs' --write",
    "verify:ops": "node dist/scripts/ci/verify_ops_brief.js",
    "check:standards": "bash scripts/check-standards.sh",
    "generate:agent": "bash scripts/generate-agent.sh",
    "onboard:setup": "bash scripts/onboard-developer.sh",
    "ci:quality": "npm run typecheck && npm run lint && (npm run test || echo 'Tests failed but continuing for CI/CD consistency')",
    "ci:strict": "npm run typecheck && npm run build && npm run test && npm run smoke && npm run schema",
    "prepare": "husky install",
    "export": "bash scripts/export_pack_smart.sh",
    "commit": "git add . && git commit -m \"feat: automated commit with Claude Code\" && git push",
    "sync": "bash scripts/slash-commands.sh sync",
    "sync:simple": "git add . && git commit -m \"sync: update with latest changes\" && git push && echo \"✅ 프로젝트 동기화 완료\"",
    "/commit": "npm run commit",
    "/sync": "npm run sync",
    "ship:docs": "npm run docs:refresh && npm run handoff",
    "ship:pre": "npm run ci:strict && npm run verify:obs && npm run verify:handoff && npm run verify:export",
    "ship": "npm run ship:pre && npm run handoff && npm run export",
    "diag:preflight": "node scripts/ci/preflight_root_cause_diag.cjs",
    "docs:sync": "bash scripts/generate-system-docs.sh && npm run docs:refresh",
    "verify:all": "npm run typecheck && npm run lint && npm run test && npm run guard:all",
    "slash": "bash scripts/slash-commands.sh"
  },
  "keywords": [
    "ai",
    "qa-generation",
    "multi-agent",
    "expert-orchestration"
  ],
  "author": "Meta-Adaptive Expert Orchestration Team",
  "license": "MIT",
  "devDependencies": {
    "@ai-sdk/openai": "^2.0.27",
    "@eslint/js": "^9.36.0",
    "@types/node": "^20.19.11",
    "@types/uuid": "^9.0.0",
    "@types/yargs": "^17.0.33",
    "@typescript-eslint/eslint-plugin": "^8.44.0",
    "@typescript-eslint/parser": "^8.44.0",
    "ajv": "^8.17.1",
    "dotenv": "17.2.2",
    "esbuild": "^0.23.0",
    "eslint": "^9.0.0",
    "husky": "^8.0.3",
    "prettier": "^3.0.0",
    "ts-node": "^10.9.2",
    "tsx": "4.20.5",
    "typescript": "^5.0.0",
    "vitest": "^1.6.1",
    "@vitest/ui": "^1.6.1"
  },
  "dependencies": {
    "@anthropic-ai/sdk": "0.61.0",
    "ai": "^5.0.37",
    "ajv-formats": "^3.0.1",
    "commander": "^11.1.0",
    "glob": "^10.4.5",
    "pino": "^8.21.0",
    "pino-pretty": "^13.1.1",
    "undici": "^6.0.0",
    "uuid": "^9.0.0",
    "yaml": "^2.8.1",
    "yargs": "^17.0.0",
    "zod": "3.25.76",
    "dd-trace": "^5.28.0",
    "newrelic": "^12.0.0",
    "prom-client": "^15.1.3"
  },
  "engines": {
    "node": ">=18.18.0 <19.0.0",
    "npm": ">=8.19.0"
  }
}
