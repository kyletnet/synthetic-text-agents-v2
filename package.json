{
  "name": "meta-adaptive-expert-orchestration",
  "version": "1.1.2",
  "description": "AI-powered QA generation using 8-Agent collaboration",
  "main": "dist/cli/main.js",
  "type": "module",
  "scripts": {
    "secret:lint": "tsx scripts/secret-lint.ts",
    "license:apply": "tsx scripts/apply-license.ts",
    "license:check": "tsx scripts/apply-license.ts --check",
    "license:verify": "tsx scripts/license-verify.ts",
    "shebang:fix": "tsx scripts/fix-shebang.ts",
    "sbom:generate": "tsx scripts/generate-sbom.ts",
    "sbom:verify": "tsx scripts/verify-sbom.ts",
    "security:profile": "tsx scripts/security-profile.ts",
    "report:encrypt": "tsx scripts/encrypt-report.ts",
    "report:decrypt": "tsx scripts/encrypt-report.ts",
    "mbc:gonogo": "tsx scripts/mbc-gonogo-check.ts",
    "sync": "tsx scripts/approval-workflow.ts request SYNC && echo \"ÏäπÏù∏ ÎåÄÍ∏∞ Ï§ë... /confirm-syncÎ°ú ÏäπÏù∏ÌïòÏÑ∏Ïöî\"",
    "sync:auto": "tsx scripts/approval-workflow.ts request SYNC && npm run review-sync && npm run confirm-sync",
    "/inspect": "tsx scripts/inspection-engine.ts",
    "status": "tsx scripts/inspection-engine.ts",
    "/radar": "tsx scripts/radar-engine.ts",
    "radar": "tsx scripts/radar-engine.ts",
    "guard": "tsx scripts/guard.ts",
    "/guard": "tsx scripts/guard.ts",
    "guard:quick": "tsx scripts/guard.ts --quick",
    "guard:report": "tsx scripts/guard.ts --report",
    "rg:run": "tsx scripts/rg/run-regression-guard.ts",
    "rg:strict": "RG_STRICT=true tsx scripts/rg/run-regression-guard.ts",
    "governance:verify": "npm run rg:run",
    "arch:check": "tsx scripts/rg/check-architecture.ts",
    "maintain": "tsx scripts/maintain-engine.ts",
    "/maintain": "tsx scripts/maintain-engine.ts",
    "/fix": "tsx scripts/fix-engine.ts",
    "fix": "tsx scripts/fix-engine.ts",
    "/refactor": "tsx scripts/refactor-engine.ts",
    "refactor": "tsx scripts/refactor-engine.ts",
    "/refactor-preview": "tsx scripts/refactor-preview-engine.ts",
    "refactor:preview": "tsx scripts/refactor-preview-engine.ts",
    "/validate": "tsx scripts/validate-engine.ts",
    "validate": "tsx scripts/validate-engine.ts",
    "validate:llm-io": "tsx scripts/validate-llm-io.ts",
    "validate:unified": "tsx scripts/validate-unified.ts",
    "/verify": "tsx scripts/verify-engine.ts",
    "verify": "tsx scripts/verify-engine.ts",
    "/update": "npm run smart:update",
    "smart:update": "tsx scripts/smart-approval-system.ts && npm run _hidden:sync-execute",
    "/ship": "npm run prepare-release",
    "status:quick": "tsx scripts/unified-dashboard.ts --quick",
    "routing:status": "tsx scripts/routing-status.ts",
    "metrics:report": "tsx scripts/performance-metrics-reporter.ts",
    "metrics:export": "tsx scripts/performance-metrics-reporter.ts --export",
    "metrics:auto": "tsx scripts/performance-metrics-reporter.ts --auto",
    "snapshot:browser": "tsx scripts/snapshot-browser.ts",
    "snapshot:dashboard": "tsx scripts/snapshot-browser.ts --detailed",
    "snapshot:recent": "tsx scripts/snapshot-browser.ts --recent",
    "snapshot:interactive": "tsx scripts/snapshot-browser.ts --interactive",
    "improve:analyze": "tsx scripts/performance-auto-improver.ts analyze",
    "improve:dry-run": "tsx scripts/performance-auto-improver.ts analyze --dry-run",
    "improve:status": "tsx scripts/performance-auto-improver.ts status",
    "improve:force-d": "tsx scripts/performance-auto-improver.ts analyze --grade=D",
    "approve": "tsx scripts/approve-queue.ts",
    "approve:status": "tsx scripts/approve-queue.ts --status",
    "approve:clear": "tsx scripts/approve-queue.ts --clear",
    "queue:status": "tsx scripts/dry-run-approval-queue.ts status",
    "queue:execute": "tsx scripts/dry-run-approval-queue.ts execute",
    "queue:demo": "tsx scripts/dry-run-approval-queue.ts demo",
    "quality:parse-guidelines": "tsx scripts/quality/parse-guidelines.ts",
    "quality:parse-force": "tsx scripts/quality/parse-guidelines.ts --force",
    "quality:assess": "tsx scripts/quality/orchestrator.ts",
    "quality:gate": "tsx scripts/quality/orchestrator.ts && echo '‚úÖ Quality gate passed'",
    "quality:test": "tsx scripts/quality/orchestrator.ts data/qa-pairs-sample.json Phase 1",
    "quality:test:phase2": "tsx scripts/quality/orchestrator.ts data/qa-pairs-phase2-sample.json Phase 2",
    "quality:test:phase3": "tsx scripts/quality/orchestrator.ts data/qa-pairs-phase2-sample.json 'Phase 3'",
    "fix:legacy": "tsx scripts/ai-fix-engine.ts",
    "ship": "bash scripts/ship-with-progress.sh",
    "ship:legacy": "npm run design:validate && npm run validate && npm run verify && npm run _hidden:integration-guard && npm run _hidden:system-integration && npm run advanced:audit && npm run docs:refresh && npm run optimize:analyze && echo 'üö¢ Ready for deployment'",
    "confirm-sync": "tsx scripts/approval-workflow.ts confirm && npm run _hidden:sync-execute",
    "deny-sync": "tsx scripts/approval-workflow.ts deny",
    "prepare-release": "tsx scripts/approval-workflow.ts request RELEASE && echo \"Î¶¥Î¶¨Ï¶à Ï§ÄÎπÑ ÏôÑÎ£å. /confirm-releaseÎ°ú ÏäπÏù∏ÌïòÏÑ∏Ïöî\"",
    "confirm-release": "tsx scripts/approval-workflow.ts confirm && npm run ship",
    "deny-release": "tsx scripts/approval-workflow.ts deny",
    "review-sync": "npm run _hidden:integration-guard && npm run _hidden:system-integration && npm run advanced:audit",
    "_hidden:sync-execute": "bash scripts/slash-commands.sh sync",
    "_hidden:integration-guard": "tsx scripts/auto-integration-guard.ts analyze",
    "_hidden:system-integration": "tsx scripts/system-integration-analyzer.ts",
    "_hidden:issues-report": "tsx scripts/issue-tracker.ts report",
    "_hidden:security-audit": "tsx scripts/security-audit-checker.ts",
    "_hidden:workflow-check": "tsx scripts/workflow-prevention-system.ts check",
    "recovery:rollback": "tsx scripts/sync-transaction-system.ts rollback",
    "recovery:status": "tsx scripts/sync-transaction-system.ts status",
    "advanced:audit": "tsx scripts/smart-refactor-auditor.ts audit",
    "advanced:improve": "tsx scripts/integration-improvement-engine.ts plan",
    "typecheck": "tsc -p tsconfig.build.json --noEmit",
    "dev:typecheck": "tsc -p tsconfig.build.json --noEmit",
    "lint": "eslint 'src/**/*.ts'",
    "dev:lint": "eslint 'src/**/*.ts'",
    "lint:fix": "eslint 'src/**/*.ts' --fix",
    "ci:quality": "npm run design:validate && npm run dev:typecheck",
    "ci:strict": "npm run design:validate && npm run dev:typecheck && npm run build",
    "fix:unused-vars": "tsx scripts/fix-unused-vars-batch.ts",
    "test:approval": "tsx scripts/test-approval.ts",
    "dev:test": "vitest --run",
    "test": "vitest --run",
    "test:coverage": "vitest --run --coverage",
    "prebuild": "rm -rf dist",
    "build": "tsc -p tsconfig.build.json",
    "postbuild": "chmod +x dist/**/*.js || true",
    "build:export": "tsx scripts/export_cli.ts",
    "dev:build": "tsc",
    "ci:build": "npm run typecheck && npm run build",
    "ci:test": "npm run ci:build && npm test",
    "design:rollback": "tsx scripts/design-rollback-system.ts rollback",
    "design:status": "tsx scripts/design-metadata-manager.ts status",
    "_arch:validate": "tsx scripts/validate-architecture.ts",
    "_arch:validate:quick": "tsx scripts/validate-architecture.ts --quick",
    "_arch:fix": "tsx scripts/validate-architecture.ts --fix",
    "arch:check": "tsx scripts/arch-drift-monitor.ts check",
    "arch:graph": "tsx scripts/arch-drift-monitor.ts graph",
    "arch:help": "tsx scripts/arch-drift-monitor.ts help",
    "governance:check": "tsx scripts/governance-check.ts",
    "governance:check:strict": "tsx scripts/governance-check.ts --strict",
    "governance:init": "tsx src/core/governance/kernel.ts",
    "governance:verify": "tsx scripts/verify-autonomous-system.ts",
    "governance:test": "vitest tests/governance/integration.test.ts",
    "governance:recover": "tsx scripts/governance-recover.ts",
    "_migration:status": "cat .migration/progress.json | jq '.statistics'",
    "_migration:list": "cat .migration/progress.json | jq '.migrations'",
    "docs:drift-scan": "tsx scripts/drift-scan.ts",
    "docs:drift-scan:fix": "tsx scripts/drift-scan.ts --fix",
    "docs:drift-scan:report": "tsx scripts/drift-scan.ts --report",
    "docs:audit:full": "tsx scripts/docs/doc-audit.ts",
    "docs:signals:validate": "tsx scripts/docs/doc-signals-validator.ts",
    "docs:lint": "tsx scripts/docs/doc-linter.ts",
    "docs:gate:ci": "tsx scripts/docs/doc-gate-ci.ts",
    "docs:gate": "tsx scripts/docs/doc-gate-ci.ts",
    "integration:improve": "tsx scripts/unified-reporter.ts",
    "reports:consolidate": "tsx scripts/unified-reporter.ts",
    "design:analyze": "tsx scripts/design-principle-engine.ts analyze",
    "design:audit": "tsx scripts/design-principle-engine.ts",
    "integration:audit": "tsx scripts/integration-enforcement-system.ts audit",
    "integration:create": "tsx scripts/integration-enforcement-system.ts create",
    "system:design": "npm run design:audit && npm run integration:audit",
    "registry:generate": "tsx scripts/component-registry-system.ts generate",
    "registry:search": "tsx scripts/component-registry-system.ts search",
    "registry:violations": "tsx scripts/component-registry-system.ts violations",
    "registry:suggestions": "tsx scripts/component-registry-system.ts suggestions",
    "registry:summary": "tsx scripts/component-registry-system.ts summary",
    "evolution:analyze": "tsx scripts/architectural-evolution-engine.ts analyze",
    "evolution:evolve": "tsx scripts/architectural-evolution-engine.ts evolve",
    "system:evolve": "npm run evolution:evolve && npm run registry:generate",
    "utility:all": "tsx scripts/metrics/__all__.ts",
    "utility:agentlogger": "tsx scripts/lib/agent_logger.ts",
    "utility:analyzemetrics": "tsx scripts/dx/analyze_metrics.ts",
    "utility:answeragent": "tsx scripts/agents/answer_agent.ts",
    "utility:anthropicadapter": "tsx scripts/clients/anthropic_adapter.js",
    "utility:anthropicadapterd": "tsx scripts/clients/anthropic_adapter.d.ts",
    "utility:anthropicsmoke": "tsx scripts/anthropic_smoke.sh",
    "utility:auditagent": "tsx scripts/agents/audit_agent.ts",
    "utility:audittrigger": "tsx scripts/audit-trigger.ts",
    "utility:autoupdatecommands": "tsx scripts/auto-update-commands.sh",
    "utility:autocalibrate": "tsx scripts/dx/autocalibrate.ts",
    "utility:baseagent": "tsx scripts/agents/base_agent.ts",
    "utility:baselinecli": "tsx scripts/metrics/baseline_cli.ts",
    "generator:baselinereportgenerator": "tsx scripts/metrics/baseline_report_generator.ts",
    "utility:budgetguard": "tsx scripts/utils/budget_guard.ts",
    "utility:budgetguardian": "tsx scripts/lib/budget_guardian.ts",
    "utility:builddocsindexes": "tsx scripts/build_docs_indexes.ts",
    "utility:checkconsistency": "tsx scripts/dx/check_consistency.ts",
    "utility:checkobservabilityconsistency": "tsx scripts/ci/check_observability_consistency.ts",
    "policy:watch": "tsx scripts/real-time-policy-reflector.ts start",
    "policy:reflect": "npm run design:analyze && npm run integration:audit && npm run registry:generate",
    "alerts:show": "tsx scripts/approval-alert-system.ts show",
    "alerts:approve": "tsx scripts/approval-alert-system.ts approve",
    "alerts:test": "tsx scripts/approval-alert-system.ts test",
    "docs:update": "tsx scripts/comprehensive-doc-updater.ts",
    "docs:refresh": "tsx scripts/comprehensive-doc-updater.ts && tsx scripts/build_docs_indexes.ts",
    "design:validate": "tsx scripts/design-validator.ts",
    "maintain:legacy:safe": "tsx scripts/smart-maintenance-orchestrator.ts safe",
    "maintain:legacy:quick": "tsx scripts/smart-maintenance-orchestrator.ts quick",
    "system:clear-queue": "echo 'üîÑ Emergency queue cleared'",
    "pending:review": "tsx scripts/smart-maintenance-orchestrator.ts pending",
    "approve:interactive": "tsx scripts/interactive-approval-handler.ts",
    "workflow:gaps": "tsx scripts/workflow-gap-detector.ts",
    "workflow:optimize": "tsx scripts/lib/interactive-recommendation-handler.ts",
    "triggers:start": "tsx scripts/lib/contextual-trigger-system.ts",
    "triggers:add": "tsx scripts/lib/contextual-trigger-system.ts add",
    "maintain:legacy:snapshot": "tsx scripts/smart-maintenance-orchestrator.ts smart --snapshot",
    "optimize": "tsx scripts/optimization-engine.ts",
    "optimize:analyze": "tsx scripts/optimization-engine.ts analyze",
    "optimize:trends": "tsx scripts/optimization-engine.ts trends",
    "communicate": "tsx scripts/user-communication-system.ts auto",
    "communicate:manual": "tsx scripts/user-communication-system.ts session",
    "handoff": "tsx scripts/user-communication-system.ts handoff",
    "report:maintain": "tsx scripts/maintain-report-generator.ts",
    "report:maintain:smart": "tsx scripts/maintain-report-generator.ts smart",
    "check:typescript": "tsx scripts/quick-check.ts typescript",
    "check:signatures": "tsx scripts/quick-check.ts signatures",
    "check:P0-only": "tsx scripts/quick-check.ts P0-only",
    "check:node": "tsx scripts/quick-check.ts node",
    "check:quick": "tsx scripts/quick-check.ts quick",
    "check:all": "tsx scripts/quick-check.ts all",
    "/communicate": "npm run communicate:manual",
    "ship:docs": "npm run docs:refresh && echo 'üìö Documentation synchronized'",
    "gap:scan": "tsx scripts/gap-scanner.ts",
    "gap:scan:quick": "tsx scripts/gap-scanner.ts --quick",
    "gap:scan:metrics": "tsx scripts/gap-scanner-metrics.ts",
    "gap:config": "tsx scripts/gap-config-manager.ts",
    "gap:pr-bot": "tsx scripts/gap-pr-bot.ts",
    "gap:backup": "tsx scripts/lib/backup-lifecycle-manager.ts",
    "gap:dashboard": "tsx scripts/gap-dashboard.ts",
    "gap:watch": "tsx scripts/gap-dashboard.ts --watch",
    "init:gap-system": "tsx scripts/init-gap-system.ts",
    "doc:lifecycle": "tsx scripts/doc-lifecycle-manager.ts",
    "doc:lifecycle:analyze": "tsx scripts/doc-lifecycle-manager.ts --analyze",
    "doc:lifecycle:stale": "tsx scripts/doc-lifecycle-manager.ts --find-stale",
    "doc:lifecycle:cleanup": "tsx scripts/doc-lifecycle-manager.ts --cleanup",
    "ship:safe": "echo 'üíæ Creating backup...' && npm run ship",
    "utility:checktaxonomyconsistency": "tsx scripts/ci/check_taxonomy_consistency.ts",
    "utility:checkdocsfreshness": "tsx scripts/check-docs-freshness.sh",
    "utility:checkstandards": "tsx scripts/check-standards.sh",
    "utility:checkpointmanager": "tsx scripts/utils/checkpoint_manager.ts",
    "utility:cleanupbackups": "tsx scripts/cleanup_backups.sh",
    "utility:cli": "tsx scripts/dx/cli.ts",
    "utility:collectsession": "tsx scripts/dx/collect_session.ts",
    "utility:commandoptimizer": "tsx scripts/command-optimizer.ts",
    "utility:commandwrapper": "tsx scripts/command-wrapper.ts",
    "utility:convertevaluationdata": "tsx scripts/convert_evaluation_data.js",
    "utility:coveragemetrics": "tsx scripts/metrics/coverage_metrics.ts",
    "system:designfirstsystemarchitect": "tsx scripts/design-first-system-architect.ts",
    "utility:detectanomalies": "tsx scripts/dx/detect_anomalies.ts",
    "utility:dlq": "tsx scripts/lib/dlq.ts",
    "utility:dlqhandler": "tsx scripts/utils/dlq_handler.ts",
    "utility:dlqmanager": "tsx scripts/dlq_manager.sh",
    "utility:dlqreprocess": "tsx scripts/dlq_reprocess.ts",
    "utility:docgate": "tsx scripts/docs/doc-gate.ts",
    "utility:doclinter": "tsx scripts/docs/doc-linter.ts",
    "utility:docqualityauditor": "tsx scripts/docs/doc-quality-auditor.ts",
    "utility:documentoptimizer": "tsx scripts/document-optimizer.ts",
    "utility:duplicationmetrics": "tsx scripts/metrics/duplication_metrics.ts",
    "utility:emergencyrecovery": "tsx scripts/emergency-recovery.sh",
    "utility:evidenceagent": "tsx scripts/agents/evidence_agent.ts",
    "utility:evidencequality": "tsx scripts/metrics/evidence_quality.ts",
    "utility:exportenhanced": "tsx scripts/lib/export_enhanced.ts",
    "utility:exportenhancedcli": "tsx scripts/lib/export_enhanced_cli.ts",
    "utility:exportpack": "tsx scripts/export_pack.sh",
    "utility:exportpacksmart": "tsx scripts/export_pack_smart.sh",
    "utility:fixtaxonomylabels": "tsx scripts/ci/fix_taxonomy_labels.ts",
    "utility:fixconsolelogs": "tsx scripts/fix-console-logs.sh",
    "utility:fixeslintissues": "tsx scripts/fix-eslint-issues.ts",
    "utility:fixmockmode": "tsx scripts/fix-mock-mode.sh",
    "utility:fixunusedvars": "tsx scripts/fix-unused-vars.sh",
    "general:newcomponent": "tsx scripts/new-component.ts",
    "_hidden:general:newcomponent": "tsx scripts/new-component.ts",
    "system component:testcomponent": "tsx scripts/test-component.ts",
    "_hidden:system component:testcomponent": "tsx scripts/test-component.ts"
  },
  "keywords": [
    "ai",
    "qa-generation",
    "multi-agent",
    "expert-orchestration"
  ],
  "author": "Meta-Adaptive Expert Orchestration Team",
  "license": "MIT",
  "devDependencies": {
    "@ai-sdk/openai": "^2.0.27",
    "@eslint/js": "9.36.0",
    "@types/node": "^20.19.11",
    "@types/uuid": "^9.0.0",
    "@types/yargs": "^17.0.33",
    "@typescript-eslint/eslint-plugin": "8.44.0",
    "@typescript-eslint/parser": "8.44.0",
    "@vitest/coverage-v8": "^1.6.1",
    "@vitest/ui": "^1.6.1",
    "ajv": "^8.17.1",
    "async-mutex": "^0.5.0",
    "dependency-cruiser": "^17.0.2",
    "dotenv": "17.2.2",
    "esbuild": "^0.23.0",
    "eslint": "9.0.0",
    "husky": "^8.0.3",
    "madge": "^8.0.0",
    "prettier": "3.0.0",
    "ts-node": "^10.9.2",
    "tsx": "4.20.5",
    "typescript": "5.9.2",
    "vitest": "^1.6.1"
  },
  "dependencies": {
    "@anthropic-ai/sdk": "0.61.0",
    "@types/js-yaml": "^4.0.9",
    "ai": "^5.0.37",
    "ajv-formats": "^3.0.1",
    "commander": "^11.1.0",
    "dd-trace": "^5.28.0",
    "glob": "^10.4.5",
    "js-yaml": "^4.1.0",
    "newrelic": "^12.0.0",
    "openai": "^6.1.0",
    "pino": "^8.21.0",
    "pino-pretty": "^13.1.1",
    "prom-client": "^15.1.3",
    "undici": "^6.0.0",
    "uuid": "^9.0.0",
    "yaml": "^2.8.1",
    "yargs": "^17.0.0",
    "zod": "3.25.76"
  },
  "engines": {
    "node": ">=18.18.0 <19.0.0",
    "npm": ">=8.19.0"
  }
}
