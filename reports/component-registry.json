{
  "version": "1.0.0",
  "lastUpdated": "2025-09-30T03:28:10.623Z",
  "totalComponents": 181,
  "complianceStats": {
    "compliant": 59,
    "violations": 122,
    "unregistered": 0
  },
  "components": [
    {
      "name": "__all__",
      "path": "scripts/metrics/__all__.ts",
      "type": "utility",
      "purpose": "sync, test, check",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path",
        "./duplication_metrics",
        "./qtype_distribution",
        "./coverage_metrics",
        "./evidence_quality",
        "./hallucination_rules",
        "./pii_license_scan"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-30T03:12:13.726Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-26T09:38:08.692Z",
        "lastIntegrated": "2025-09-30T03:12:13.786Z",
        "status": "active"
      }
    },
    {
      "name": "adaptive-execution-engine",
      "path": "scripts/lib/adaptive-execution-engine.ts",
      "type": "system",
      "purpose": "status, sync, test, check, audit",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "./smart-decision-matrix.js",
        "./performance-cache.js",
        "./safe-automation-guard.js",
        "./interactive-approval-system.js",
        "./component-integration-adapter.js",
        "child_process",
        "perf_hooks",
        "events"
      ],
      "integrationPoints": [],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "System/internal/engine components hidden in internal layer",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-26T01:32:26.696Z"
      },
      "lifecycle": {
        "created": "2025-09-26T01:32:26.755Z",
        "lastUpdated": "2025-09-25T10:13:41.770Z",
        "lastIntegrated": "2025-09-26T01:32:26.755Z",
        "status": "active"
      }
    },
    {
      "name": "advanced-system-diagnostics",
      "path": "scripts/lib/advanced-system-diagnostics.ts",
      "type": "system",
      "purpose": "sync, fix, check",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "child_process",
        "fs",
        "path",
        "glob"
      ],
      "integrationPoints": [],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "System/internal/engine components hidden in internal layer",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-26T02:10:51.567Z"
      },
      "lifecycle": {
        "created": "2025-09-26T02:10:51.630Z",
        "lastUpdated": "2025-09-26T02:09:11.857Z",
        "lastIntegrated": "2025-09-26T02:10:51.630Z",
        "status": "active"
      }
    },
    {
      "name": "agent_logger",
      "path": "scripts/lib/agent_logger.ts",
      "type": "utility",
      "purpose": "status, check, audit",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": false,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Status integration requires health metrics and summary",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:48.459Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-23T08:53:35.101Z",
        "lastIntegrated": "2025-09-25T09:41:48.516Z",
        "status": "active"
      }
    },
    {
      "name": "ai-fix-engine",
      "path": "scripts/ai-fix-engine.ts",
      "type": "system",
      "purpose": "status, sync, fix, test, check",
      "riskLevel": "low",
      "userImpact": "medium",
      "dependencies": [
        "fs",
        "path",
        "./ts-compile-checker.js",
        "fs",
        "path",
        "glob",
        "yaml",
        "./logger.js",
        "../../plugins/types/DocPlugin.js"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "System/internal/engine components hidden in internal layer",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:46.535Z"
      },
      "lifecycle": {
        "created": "2025-09-25 11:24:04 +0900",
        "lastUpdated": "2025-09-25T04:30:54.497Z",
        "lastIntegrated": "2025-09-25T09:41:46.586Z",
        "status": "active"
      }
    },
    {
      "name": "analyze_metrics",
      "path": "scripts/dx/analyze_metrics.ts",
      "type": "utility",
      "purpose": "sync",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "./collect_session.js",
        "./types.js"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": false,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Sync/git/commit components integrated into sync workflow",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-25T09:41:49.123Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-23T08:53:34.830Z",
        "lastIntegrated": "2025-09-25T09:41:49.184Z",
        "status": "active"
      }
    },
    {
      "name": "answer_agent",
      "path": "scripts/agents/answer_agent.ts",
      "type": "utility",
      "purpose": "sync, test, validate, check",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "./base_agent",
        "../clients/anthropic_adapter",
        "./evidence_agent"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:50.008Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-23T08:53:34.205Z",
        "lastIntegrated": "2025-09-25T09:41:50.067Z",
        "status": "active"
      }
    },
    {
      "name": "anthropic_adapter",
      "path": "scripts/clients/anthropic_adapter.js",
      "type": "utility",
      "purpose": "status, security, sync, test",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "child_process"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:49.407Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-23T08:53:34.796Z",
        "lastIntegrated": "2025-09-25T09:41:49.466Z",
        "status": "active"
      }
    },
    {
      "name": "anthropic_adapter.d",
      "path": "scripts/clients/anthropic_adapter.d.ts",
      "type": "utility",
      "purpose": "status, security",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": false,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Status integration requires health metrics and summary",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:49.467Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-23T08:53:34.780Z",
        "lastIntegrated": "2025-09-25T09:41:49.525Z",
        "status": "active"
      }
    },
    {
      "name": "anthropic_smoke",
      "path": "scripts/anthropic_smoke.sh",
      "type": "utility",
      "purpose": "test",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": false,
          "includeInSync": false,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-25T09:41:46.473Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-22T09:23:47.896Z",
        "lastIntegrated": "2025-09-25T09:41:46.533Z",
        "status": "active"
      }
    },
    {
      "name": "approval-alert-system",
      "path": "scripts/approval-alert-system.ts",
      "type": "system",
      "purpose": "security, test",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": false,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Security components mandatory in status for safety",
          "System/internal/engine components hidden in internal layer",
          "Status integration requires health metrics and summary",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-26T01:32:25.666Z"
      },
      "lifecycle": {
        "created": "2025-09-26T01:32:25.726Z",
        "lastUpdated": "2025-09-25T09:46:06.498Z",
        "lastIntegrated": "2025-09-26T01:32:25.726Z",
        "status": "active"
      }
    },
    {
      "name": "approval-criteria",
      "path": "scripts/lib/approval-criteria.ts",
      "type": "utility",
      "purpose": "security, test, git",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [],
      "integrationPoints": [],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-26T06:45:56.963Z"
      },
      "lifecycle": {
        "created": "2025-09-26T06:45:57.038Z",
        "lastUpdated": "2025-09-26T06:42:09.820Z",
        "lastIntegrated": "2025-09-26T06:45:57.038Z",
        "status": "active"
      }
    },
    {
      "name": "approval-queue",
      "path": "scripts/lib/approval-queue.ts",
      "type": "utility",
      "purpose": "utility",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path"
      ],
      "integrationPoints": [],
      "constraints": [
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": false,
          "includeInSync": false,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-26T07:01:45.298Z"
      },
      "lifecycle": {
        "created": "2025-09-26T07:01:45.358Z",
        "lastUpdated": "2025-09-26T06:54:29.575Z",
        "lastIntegrated": "2025-09-26T07:01:45.358Z",
        "status": "active"
      }
    },
    {
      "name": "approval-workflow",
      "path": "scripts/approval-workflow.ts",
      "type": "utility",
      "purpose": "sync",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path",
        "child_process",
        "./auto-integration-guard.js"
      ],
      "integrationPoints": [
        "unified-dashboard",
        "package.json",
        "documentation"
      ],
      "constraints": [
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": false,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Sync/git/commit components integrated into sync workflow",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-25T09:41:46.362Z"
      },
      "lifecycle": {
        "created": "2025-09-25 13:25:09 +0900",
        "lastUpdated": "2025-09-25T04:30:54.504Z",
        "lastIntegrated": "2025-09-25T09:41:46.412Z",
        "status": "active"
      }
    },
    {
      "name": "approve-queue",
      "path": "scripts/approve-queue.ts",
      "type": "utility",
      "purpose": "status, sync",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "./lib/approval-queue.js",
        "./lib/simplified-approval-system.js"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-26T07:01:45.164Z"
      },
      "lifecycle": {
        "created": "2025-09-26T07:01:45.233Z",
        "lastUpdated": "2025-09-26T06:56:27.195Z",
        "lastIntegrated": "2025-09-26T07:01:45.233Z",
        "status": "active"
      }
    },
    {
      "name": "architectural-evolution-engine",
      "path": "scripts/architectural-evolution-engine.ts",
      "type": "system",
      "purpose": "status, security, sync, fix, test, validate, check",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path",
        "./component-registry-system.js",
        "./design-principle-engine.js",
        "${importPath}"
      ],
      "integrationPoints": [
        "unified-dashboard",
        "package.json"
      ],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "System/internal/engine components hidden in internal layer",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-26T01:32:25.606Z"
      },
      "lifecycle": {
        "created": "2025-09-26T01:32:25.665Z",
        "lastUpdated": "2025-09-25T09:48:21.307Z",
        "lastIntegrated": "2025-09-26T01:32:25.665Z",
        "status": "active"
      }
    },
    {
      "name": "audit_agent",
      "path": "scripts/agents/audit_agent.ts",
      "type": "utility",
      "purpose": "sync, test, validate, check, audit",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "./base_agent",
        "../clients/anthropic_adapter",
        "./evidence_agent",
        "./answer_agent"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:49.948Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-23T08:53:34.391Z",
        "lastIntegrated": "2025-09-25T09:41:50.006Z",
        "status": "active"
      }
    },
    {
      "name": "audit-trigger",
      "path": "scripts/audit-trigger.ts",
      "type": "utility",
      "purpose": "sync, deploy, test, check, git, audit",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "child_process",
        "fs",
        "./refactor-auditor.js"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": true
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": true,
        "reasoning": [
          "Deployment/release operations require approval",
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Deploy/release/ship components integrated into ship workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:46.246Z"
      },
      "lifecycle": {
        "created": "2025-09-24 16:54:07 +0900",
        "lastUpdated": "2025-09-24T09:14:44.502Z",
        "lastIntegrated": "2025-09-25T09:41:46.297Z",
        "status": "active"
      }
    },
    {
      "name": "auto-fix-manager",
      "path": "scripts/lib/auto-fix-manager.ts",
      "type": "utility",
      "purpose": "status, sync, fix, test, check, git",
      "riskLevel": "medium",
      "userImpact": "medium",
      "dependencies": [
        "fs",
        "path",
        "child_process",
        "events",
        "zlib",
        "util",
        "stream"
      ],
      "integrationPoints": [],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-26T01:42:26.995Z"
      },
      "lifecycle": {
        "created": "2025-09-26T01:42:27.058Z",
        "lastUpdated": "2025-09-26T01:34:33.116Z",
        "lastIntegrated": "2025-09-26T01:42:27.058Z",
        "status": "active"
      }
    },
    {
      "name": "auto-integration-guard",
      "path": "scripts/auto-integration-guard.ts",
      "type": "utility",
      "purpose": "status, security, sync, check, git, audit",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path",
        "child_process",
        "./system-integration-analyzer.js"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:46.194Z"
      },
      "lifecycle": {
        "created": "2025-09-25 13:25:09 +0900",
        "lastUpdated": "2025-09-25T04:30:54.527Z",
        "lastIntegrated": "2025-09-25T09:41:46.245Z",
        "status": "active"
      }
    },
    {
      "name": "auto-update-commands",
      "path": "scripts/auto-update-commands.sh",
      "type": "utility",
      "purpose": "status, sync, fix, test, check",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:46.133Z"
      },
      "lifecycle": {
        "created": "2025-09-22 21:04:17 +0900",
        "lastUpdated": "2025-09-22T11:57:27.330Z",
        "lastIntegrated": "2025-09-25T09:41:46.192Z",
        "status": "active"
      }
    },
    {
      "name": "autocalibrate",
      "path": "scripts/dx/autocalibrate.ts",
      "type": "utility",
      "purpose": "sync, audit",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "glob",
        "./types.js"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:49.064Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-23T08:53:34.860Z",
        "lastIntegrated": "2025-09-25T09:41:49.121Z",
        "status": "active"
      }
    },
    {
      "name": "base_agent",
      "path": "scripts/agents/base_agent.ts",
      "type": "utility",
      "purpose": "sync, validate, check",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:49.888Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-23T08:53:34.431Z",
        "lastIntegrated": "2025-09-25T09:41:49.947Z",
        "status": "active"
      }
    },
    {
      "name": "baseline_cli",
      "path": "scripts/metrics/baseline_cli.ts",
      "type": "utility",
      "purpose": "status, sync",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-30T03:12:13.656Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-26T09:29:46.248Z",
        "lastIntegrated": "2025-09-30T03:12:13.724Z",
        "status": "active"
      }
    },
    {
      "name": "baseline_report_generator",
      "path": "scripts/metrics/baseline_report_generator.ts",
      "type": "generator",
      "purpose": "status, sync, deploy, test, validate, check",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "node:fs",
        "node:path",
        "crypto",
        "path",
        "./__all__",
        "ajv",
        "ajv-formats"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": true
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": true,
        "reasoning": [
          "Deployment/release operations require approval",
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Deploy/release/ship components integrated into ship workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-30T03:12:13.593Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-26T09:38:29.198Z",
        "lastIntegrated": "2025-09-30T03:12:13.654Z",
        "status": "active"
      }
    },
    {
      "name": "budget_guard",
      "path": "scripts/utils/budget_guard.ts",
      "type": "utility",
      "purpose": "status, test, validate, check, audit",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": false,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Status integration requires health metrics and summary",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:46.823Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-23T08:53:35.602Z",
        "lastIntegrated": "2025-09-25T09:41:46.881Z",
        "status": "active"
      }
    },
    {
      "name": "budget_guardian",
      "path": "scripts/lib/budget_guardian.ts",
      "type": "utility",
      "purpose": "status, check, audit",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": false,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Status integration requires health metrics and summary",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:48.400Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-23T08:53:35.121Z",
        "lastIntegrated": "2025-09-25T09:41:48.457Z",
        "status": "active"
      }
    },
    {
      "name": "build_docs_indexes",
      "path": "scripts/build_docs_indexes.ts",
      "type": "utility",
      "purpose": "test",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": false,
          "includeInSync": false,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-25T09:41:46.016Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-23T08:53:34.681Z",
        "lastIntegrated": "2025-09-25T09:41:46.074Z",
        "status": "active"
      }
    },
    {
      "name": "build_docs_indexes",
      "path": "scripts/build_docs_indexes.js",
      "type": "utility",
      "purpose": "test",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [],
      "integrationPoints": [],
      "constraints": [
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": false,
          "includeInSync": false,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-25T09:41:46.075Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-23T08:53:34.674Z",
        "lastIntegrated": "2025-09-25T09:41:46.132Z",
        "status": "active"
      }
    },
    {
      "name": "check_consistency",
      "path": "scripts/dx/check_consistency.ts",
      "type": "utility",
      "purpose": "status, sync, validate, check",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "./collect_session.js",
        "./types.js"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:49.003Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-23T08:53:34.870Z",
        "lastIntegrated": "2025-09-25T09:41:49.062Z",
        "status": "active"
      }
    },
    {
      "name": "check_observability_consistency",
      "path": "scripts/ci/check_observability_consistency.ts",
      "type": "utility",
      "purpose": "fix, check",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path",
        "url",
        "path"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": false,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Fix/repair/lint components integrated into fix workflow",
          "Status integration requires health metrics and summary",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:49.705Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-23T08:53:34.707Z",
        "lastIntegrated": "2025-09-25T09:41:49.763Z",
        "status": "active"
      }
    },
    {
      "name": "check_taxonomy_consistency",
      "path": "scripts/ci/check_taxonomy_consistency.ts",
      "type": "utility",
      "purpose": "sync, test, validate, check",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "glob",
        "util"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:49.645Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-23T08:53:34.722Z",
        "lastIntegrated": "2025-09-25T09:41:49.704Z",
        "status": "active"
      }
    },
    {
      "name": "check-docs-freshness",
      "path": "scripts/check-docs-freshness.sh",
      "type": "utility",
      "purpose": "sync, check",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:45.937Z"
      },
      "lifecycle": {
        "created": "2025-09-22 21:04:17 +0900",
        "lastUpdated": "2025-09-25T03:25:55.040Z",
        "lastIntegrated": "2025-09-25T09:41:46.015Z",
        "status": "active"
      }
    },
    {
      "name": "check-standards",
      "path": "scripts/check-standards.sh",
      "type": "utility",
      "purpose": "fix, test, check, git",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:45.827Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-22T09:23:47.894Z",
        "lastIntegrated": "2025-09-25T09:41:45.934Z",
        "status": "active"
      }
    },
    {
      "name": "checkpoint_manager",
      "path": "scripts/utils/checkpoint_manager.ts",
      "type": "utility",
      "purpose": "sync, test, check",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:46.763Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-23T08:53:35.624Z",
        "lastIntegrated": "2025-09-25T09:41:46.821Z",
        "status": "active"
      }
    },
    {
      "name": "checkpoint_manager",
      "path": "scripts/lib/checkpoint_manager.ts",
      "type": "utility",
      "purpose": "status, sync, test, check",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path"
      ],
      "integrationPoints": [],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:48.341Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-23T08:53:35.177Z",
        "lastIntegrated": "2025-09-25T09:41:48.398Z",
        "status": "active"
      }
    },
    {
      "name": "cleanup_backups",
      "path": "scripts/cleanup_backups.sh",
      "type": "utility",
      "purpose": "git",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": false,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Sync/git/commit components integrated into sync workflow",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-25T09:41:45.763Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-22T09:23:47.935Z",
        "lastIntegrated": "2025-09-25T09:41:45.826Z",
        "status": "active"
      }
    },
    {
      "name": "cli",
      "path": "scripts/dx/cli.ts",
      "type": "utility",
      "purpose": "status, sync, test, validate, check",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "commander",
        "./collect_session.js",
        "./check_consistency.js",
        "./load_thresholds.js",
        "./autocalibrate.js",
        "./analyze_metrics.js",
        "./detect_anomalies.js",
        "./recommend_actions.js",
        "./gating.js",
        "./persist_reports.js",
        "./types.js"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:48.943Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-23T08:53:34.889Z",
        "lastIntegrated": "2025-09-25T09:41:49.002Z",
        "status": "active"
      }
    },
    {
      "name": "collect_session",
      "path": "scripts/dx/collect_session.ts",
      "type": "utility",
      "purpose": "sync",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "glob",
        "./types.js"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": false,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Sync/git/commit components integrated into sync workflow",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-25T09:41:48.879Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-23T08:53:34.903Z",
        "lastIntegrated": "2025-09-25T09:41:48.942Z",
        "status": "active"
      }
    },
    {
      "name": "command-optimizer",
      "path": "scripts/command-optimizer.ts",
      "type": "utility",
      "purpose": "sync, fix, test, check, audit",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:45.709Z"
      },
      "lifecycle": {
        "created": "2025-09-25 11:24:04 +0900",
        "lastUpdated": "2025-09-25T04:30:54.600Z",
        "lastIntegrated": "2025-09-25T09:41:45.762Z",
        "status": "active"
      }
    },
    {
      "name": "command-wrapper",
      "path": "scripts/command-wrapper.ts",
      "type": "utility",
      "purpose": "status, sync",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "child_process",
        "./issue-tracker.js"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:45.654Z"
      },
      "lifecycle": {
        "created": "2025-09-25 13:25:09 +0900",
        "lastUpdated": "2025-09-25T04:30:54.605Z",
        "lastIntegrated": "2025-09-25T09:41:45.708Z",
        "status": "active"
      }
    },
    {
      "name": "component-harmony-analyzer",
      "path": "scripts/lib/component-harmony-analyzer.ts",
      "type": "utility",
      "purpose": "sync, test, git",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "events",
        "fs",
        "path",
        "child_process"
      ],
      "integrationPoints": [],
      "constraints": [
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": false,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Sync/git/commit components integrated into sync workflow",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-26T01:32:26.573Z"
      },
      "lifecycle": {
        "created": "2025-09-26T01:32:26.632Z",
        "lastUpdated": "2025-09-25T10:45:54.280Z",
        "lastIntegrated": "2025-09-26T01:32:26.632Z",
        "status": "active"
      }
    },
    {
      "name": "component-integration-adapter",
      "path": "scripts/lib/component-integration-adapter.ts",
      "type": "utility",
      "purpose": "status, sync",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "./core-system-hub.js",
        "perf_hooks"
      ],
      "integrationPoints": [],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-26T01:32:26.511Z"
      },
      "lifecycle": {
        "created": "2025-09-26T01:32:26.572Z",
        "lastUpdated": "2025-09-25T10:09:27.261Z",
        "lastIntegrated": "2025-09-26T01:32:26.572Z",
        "status": "active"
      }
    },
    {
      "name": "component-registry-system",
      "path": "scripts/component-registry-system.ts",
      "type": "system",
      "purpose": "status, sync, fix, test, check, git",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path",
        "./design-principle-engine.js",
        "./integration-enforcement-system.js"
      ],
      "integrationPoints": [
        "unified-dashboard",
        "package.json"
      ],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "System/internal/engine components hidden in internal layer",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-26T01:32:25.546Z"
      },
      "lifecycle": {
        "created": "2025-09-26T01:32:25.605Z",
        "lastUpdated": "2025-09-25T09:44:14.293Z",
        "lastIntegrated": "2025-09-26T01:32:25.605Z",
        "status": "active"
      }
    },
    {
      "name": "comprehensive-doc-updater",
      "path": "scripts/comprehensive-doc-updater.ts",
      "type": "utility",
      "purpose": "status, sync, fix, test, check, git",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path",
        "child_process",
        "util"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:45.536Z"
      },
      "lifecycle": {
        "created": "2025-09-25 13:25:09 +0900",
        "lastUpdated": "2025-09-25T04:30:54.619Z",
        "lastIntegrated": "2025-09-25T09:41:45.586Z",
        "status": "active"
      }
    },
    {
      "name": "contextual-trigger-system",
      "path": "scripts/lib/contextual-trigger-system.ts",
      "type": "system",
      "purpose": "status, security, sync, test, check, git, audit",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "child_process",
        "fs",
        "path",
        "fs",
        "events"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "System/internal/engine components hidden in internal layer",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-26T03:58:15.322Z"
      },
      "lifecycle": {
        "created": "2025-09-26T03:58:15.521Z",
        "lastUpdated": "2025-09-26T03:51:16.516Z",
        "lastIntegrated": "2025-09-26T03:58:15.521Z",
        "status": "active"
      }
    },
    {
      "name": "convert_evaluation_data",
      "path": "scripts/convert_evaluation_data.js",
      "type": "utility",
      "purpose": "test",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path",
        "url"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": false,
          "includeInSync": false,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-25T09:41:45.480Z"
      },
      "lifecycle": {
        "created": "2025-09-24 12:46:42 +0900",
        "lastUpdated": "2025-09-24T09:14:44.606Z",
        "lastIntegrated": "2025-09-25T09:41:45.535Z",
        "status": "active"
      }
    },
    {
      "name": "core-system-hub",
      "path": "scripts/lib/core-system-hub.ts",
      "type": "system",
      "purpose": "status, sync, fix, test",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "events",
        "path"
      ],
      "integrationPoints": [],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "System/internal/engine components hidden in internal layer",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-26T06:20:03.249Z"
      },
      "lifecycle": {
        "created": "2025-09-26T06:20:03.472Z",
        "lastUpdated": "2025-09-26T06:19:41.868Z",
        "lastIntegrated": "2025-09-26T06:20:03.472Z",
        "status": "active"
      }
    },
    {
      "name": "coverage_metrics",
      "path": "scripts/metrics/coverage_metrics.ts",
      "type": "utility",
      "purpose": "test",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "fs"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": false,
          "includeInSync": false,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-30T03:12:13.532Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-26T09:29:46.293Z",
        "lastIntegrated": "2025-09-30T03:12:13.591Z",
        "status": "active"
      }
    },
    {
      "name": "design-first-system-architect",
      "path": "scripts/design-first-system-architect.ts",
      "type": "system",
      "purpose": "status, security, sync, fix, test, check, git, audit",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "path",
        "child_process",
        "./design-rollback-system.js",
        "./design-metadata-manager.js",
        "./issue-tracker.js",
        "./security-audit-checker.js",
        "./system-integration-analyzer.js",
        "child_process",
        "fs",
        "path",
        "child_process",
        "./auto-integration-guard.js"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "System/internal/engine components hidden in internal layer",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:45.427Z"
      },
      "lifecycle": {
        "created": "2025-09-25 13:25:09 +0900",
        "lastUpdated": "2025-09-25T04:30:54.642Z",
        "lastIntegrated": "2025-09-25T09:41:45.479Z",
        "status": "active"
      }
    },
    {
      "name": "design-metadata-manager",
      "path": "scripts/design-metadata-manager.ts",
      "type": "utility",
      "purpose": "status, sync, fix, audit",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path",
        "child_process"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:45.373Z"
      },
      "lifecycle": {
        "created": "2025-09-25 13:25:09 +0900",
        "lastUpdated": "2025-09-25T04:30:54.651Z",
        "lastIntegrated": "2025-09-25T09:41:45.426Z",
        "status": "active"
      }
    },
    {
      "name": "design-principle-engine",
      "path": "scripts/design-principle-engine.ts",
      "type": "system",
      "purpose": "status, security, sync, fix, deploy, test, validate, check, git, audit",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": true
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": true,
        "reasoning": [
          "Deployment/release operations require approval",
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "Deploy/release/ship components integrated into ship workflow",
          "System/internal/engine components hidden in internal layer",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:45.306Z"
      },
      "lifecycle": {
        "created": "2025-09-25T09:41:45.371Z",
        "lastUpdated": "2025-09-25T07:48:31.401Z",
        "lastIntegrated": "2025-09-25T09:41:45.371Z",
        "status": "active"
      }
    },
    {
      "name": "design-principle-mapper",
      "path": "scripts/lib/design-principle-mapper.ts",
      "type": "utility",
      "purpose": "check",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [],
      "integrationPoints": [],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": false,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Status integration requires health metrics and summary",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-26T03:12:34.043Z"
      },
      "lifecycle": {
        "created": "2025-09-26T03:12:34.105Z",
        "lastUpdated": "2025-09-26T02:56:19.167Z",
        "lastIntegrated": "2025-09-26T03:12:34.105Z",
        "status": "active"
      }
    },
    {
      "name": "design-rollback-system",
      "path": "scripts/design-rollback-system.ts",
      "type": "system",
      "purpose": "sync, git",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "path",
        "child_process"
      ],
      "integrationPoints": [
        "package.json",
        "documentation"
      ],
      "constraints": [
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": false,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Sync/git/commit components integrated into sync workflow",
          "System/internal/engine components hidden in internal layer",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-25T09:41:45.254Z"
      },
      "lifecycle": {
        "created": "2025-09-25 13:25:09 +0900",
        "lastUpdated": "2025-09-25T04:30:54.671Z",
        "lastIntegrated": "2025-09-25T09:41:45.305Z",
        "status": "active"
      }
    },
    {
      "name": "detect_anomalies",
      "path": "scripts/dx/detect_anomalies.ts",
      "type": "utility",
      "purpose": "sync, test",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "glob",
        "./types.js"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": false,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Sync/git/commit components integrated into sync workflow",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-25T09:41:48.815Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-23T08:53:34.923Z",
        "lastIntegrated": "2025-09-25T09:41:48.878Z",
        "status": "active"
      }
    },
    {
      "name": "dlq",
      "path": "scripts/lib/dlq.ts",
      "type": "utility",
      "purpose": "utility",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": false,
          "includeInSync": false,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-25T09:41:48.280Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-23T08:53:35.242Z",
        "lastIntegrated": "2025-09-25T09:41:48.339Z",
        "status": "active"
      }
    },
    {
      "name": "dlq_handler",
      "path": "scripts/utils/dlq_handler.ts",
      "type": "utility",
      "purpose": "status, sync",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:46.704Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-23T08:53:35.640Z",
        "lastIntegrated": "2025-09-25T09:41:46.761Z",
        "status": "active"
      }
    },
    {
      "name": "dlq_manager",
      "path": "scripts/dlq_manager.sh",
      "type": "utility",
      "purpose": "status",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": false,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Status integration requires health metrics and summary",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:45.193Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-22T09:23:47.896Z",
        "lastIntegrated": "2025-09-25T09:41:45.253Z",
        "status": "active"
      }
    },
    {
      "name": "dlq_manager",
      "path": "scripts/lib/dlq_manager.ts",
      "type": "utility",
      "purpose": "sync",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path"
      ],
      "integrationPoints": [],
      "constraints": [
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": false,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Sync/git/commit components integrated into sync workflow",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-25T09:41:48.221Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-23T08:53:35.206Z",
        "lastIntegrated": "2025-09-25T09:41:48.279Z",
        "status": "active"
      }
    },
    {
      "name": "dlq_reprocess",
      "path": "scripts/dlq_reprocess.ts",
      "type": "utility",
      "purpose": "sync",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "./lib/dlq_manager.js",
        "./metrics/threshold_manager.js"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": false,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Sync/git/commit components integrated into sync workflow",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-25T09:41:45.135Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-23T08:53:34.814Z",
        "lastIntegrated": "2025-09-25T09:41:45.192Z",
        "status": "active"
      }
    },
    {
      "name": "doc-gate",
      "path": "scripts/docs/doc-gate.ts",
      "type": "utility",
      "purpose": "status, sync, check, git, audit",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:49.353Z"
      },
      "lifecycle": {
        "created": "2025-09-25 11:24:04 +0900",
        "lastUpdated": "2025-09-25T04:30:54.697Z",
        "lastIntegrated": "2025-09-25T09:41:49.406Z",
        "status": "active"
      }
    },
    {
      "name": "doc-linter",
      "path": "scripts/docs/doc-linter.ts",
      "type": "utility",
      "purpose": "sync, test, check",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path",
        "glob",
        "yaml"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:49.299Z"
      },
      "lifecycle": {
        "created": "2025-09-25 11:24:04 +0900",
        "lastUpdated": "2025-09-25T04:30:54.709Z",
        "lastIntegrated": "2025-09-25T09:41:49.350Z",
        "status": "active"
      }
    },
    {
      "name": "doc-quality-auditor",
      "path": "scripts/docs/doc-quality-auditor.ts",
      "type": "utility",
      "purpose": "sync, test, validate, check, audit",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path",
        "glob"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:49.243Z"
      },
      "lifecycle": {
        "created": "2025-09-25 11:24:04 +0900",
        "lastUpdated": "2025-09-25T04:30:54.729Z",
        "lastIntegrated": "2025-09-25T09:41:49.298Z",
        "status": "active"
      }
    },
    {
      "name": "document-optimizer",
      "path": "scripts/document-optimizer.ts",
      "type": "utility",
      "purpose": "sync, check",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "path"
      ],
      "integrationPoints": [
        "unified-dashboard",
        "package.json"
      ],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-25T09:41:45.074Z"
      },
      "lifecycle": {
        "created": "2025-09-25T09:41:45.134Z",
        "lastUpdated": "2025-09-25T07:48:31.563Z",
        "lastIntegrated": "2025-09-25T09:41:45.134Z",
        "status": "active"
      }
    },
    {
      "name": "dry-run-approval-queue",
      "path": "scripts/dry-run-approval-queue.ts",
      "type": "utility",
      "purpose": "status, security, sync, fix, test",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "./lib/auto-fix-manager.js",
        "fs",
        "path",
        "child_process"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-26T01:32:25.486Z"
      },
      "lifecycle": {
        "created": "2025-09-26T01:32:25.545Z",
        "lastUpdated": "2025-09-26T00:35:24.135Z",
        "lastIntegrated": "2025-09-26T01:32:25.545Z",
        "status": "active"
      }
    },
    {
      "name": "duplication_metrics",
      "path": "scripts/metrics/duplication_metrics.ts",
      "type": "utility",
      "purpose": "sync, test, check",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-30T03:12:13.469Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-26T09:29:46.264Z",
        "lastIntegrated": "2025-09-30T03:12:13.529Z",
        "status": "active"
      }
    },
    {
      "name": "emergency-recovery",
      "path": "scripts/emergency-recovery.sh",
      "type": "utility",
      "purpose": "status, sync, fix, check, git",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:45.014Z"
      },
      "lifecycle": {
        "created": "2025-09-22 21:27:59 +0900",
        "lastUpdated": "2025-09-22T12:26:11.289Z",
        "lastIntegrated": "2025-09-25T09:41:45.072Z",
        "status": "active"
      }
    },
    {
      "name": "evidence_agent",
      "path": "scripts/agents/evidence_agent.ts",
      "type": "utility",
      "purpose": "sync, test, validate, check",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "./base_agent",
        "../clients/anthropic_adapter"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:49.824Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-23T08:53:34.466Z",
        "lastIntegrated": "2025-09-25T09:41:49.884Z",
        "status": "active"
      }
    },
    {
      "name": "evidence_quality",
      "path": "scripts/metrics/evidence_quality.ts",
      "type": "utility",
      "purpose": "test",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "fs"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": false,
          "includeInSync": false,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-30T03:12:13.408Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-26T09:29:46.288Z",
        "lastIntegrated": "2025-09-30T03:12:13.468Z",
        "status": "active"
      }
    },
    {
      "name": "export_cli",
      "path": "scripts/export_cli.ts",
      "type": "utility",
      "purpose": "validate",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": false,
          "includeInSync": false,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-25T09:41:44.956Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-23T08:53:35.022Z",
        "lastIntegrated": "2025-09-25T09:41:45.012Z",
        "status": "active"
      }
    },
    {
      "name": "export_enhanced",
      "path": "scripts/lib/export_enhanced.ts",
      "type": "utility",
      "purpose": "sync, test, validate, check",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path",
        "fs",
        "stream",
        "stream/promises",
        "ajv",
        "ajv-formats"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:48.163Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-23T08:53:35.272Z",
        "lastIntegrated": "2025-09-25T09:41:48.220Z",
        "status": "active"
      }
    },
    {
      "name": "export_enhanced_cli",
      "path": "scripts/lib/export_enhanced_cli.ts",
      "type": "utility",
      "purpose": "sync, test, validate",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": false,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Sync/git/commit components integrated into sync workflow",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-25T09:41:48.102Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-23T08:53:35.251Z",
        "lastIntegrated": "2025-09-25T09:41:48.161Z",
        "status": "active"
      }
    },
    {
      "name": "export_pack",
      "path": "scripts/export_pack.sh",
      "type": "utility",
      "purpose": "git",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": false,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Sync/git/commit components integrated into sync workflow",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-25T09:41:44.895Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-22T09:23:47.917Z",
        "lastIntegrated": "2025-09-25T09:41:44.954Z",
        "status": "active"
      }
    },
    {
      "name": "export_pack_smart",
      "path": "scripts/export_pack_smart.sh",
      "type": "utility",
      "purpose": "test, git",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": false,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Sync/git/commit components integrated into sync workflow",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-25T09:41:44.833Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-22T09:23:47.940Z",
        "lastIntegrated": "2025-09-25T09:41:44.893Z",
        "status": "active"
      }
    },
    {
      "name": "externalized-decision-matrix",
      "path": "scripts/lib/externalized-decision-matrix.ts",
      "type": "utility",
      "purpose": "sync, check",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "js-yaml",
        "fs",
        "path",
        "events"
      ],
      "integrationPoints": [],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-26T01:32:26.386Z"
      },
      "lifecycle": {
        "created": "2025-09-26T01:32:26.447Z",
        "lastUpdated": "2025-09-25T10:43:04.371Z",
        "lastIntegrated": "2025-09-26T01:32:26.447Z",
        "status": "active"
      }
    },
    {
      "name": "fix_taxonomy_labels",
      "path": "scripts/ci/fix_taxonomy_labels.ts",
      "type": "utility",
      "purpose": "sync, fix, test, validate",
      "riskLevel": "medium",
      "userImpact": "medium",
      "dependencies": [
        "fs",
        "glob",
        "util"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": false,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-25T09:41:49.587Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-23T08:53:34.746Z",
        "lastIntegrated": "2025-09-25T09:41:49.643Z",
        "status": "active"
      }
    },
    {
      "name": "fix-console-logs",
      "path": "scripts/fix-console-logs.sh",
      "type": "utility",
      "purpose": "fix, test, check",
      "riskLevel": "low",
      "userImpact": "medium",
      "dependencies": [
        "../shared/logger.js",
        "../shared/logger.js"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": false,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Fix/repair/lint components integrated into fix workflow",
          "Status integration requires health metrics and summary",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:44.774Z"
      },
      "lifecycle": {
        "created": "2025-09-23 12:00:27 +0900",
        "lastUpdated": "2025-09-23T01:10:12.144Z",
        "lastIntegrated": "2025-09-25T09:41:44.831Z",
        "status": "active"
      }
    },
    {
      "name": "fix-eslint-issues",
      "path": "scripts/fix-eslint-issues.ts",
      "type": "utility",
      "purpose": "sync, fix, test, check",
      "riskLevel": "medium",
      "userImpact": "medium",
      "dependencies": [
        "fs",
        "child_process",
        "util",
        "glob",
        "${modulePath}"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:44.714Z"
      },
      "lifecycle": {
        "created": "2025-09-23 17:44:24 +0900",
        "lastUpdated": "2025-09-23T08:53:35.048Z",
        "lastIntegrated": "2025-09-25T09:41:44.772Z",
        "status": "active"
      }
    },
    {
      "name": "fix-mock-mode",
      "path": "scripts/fix-mock-mode.sh",
      "type": "utility",
      "purpose": "status, fix",
      "riskLevel": "low",
      "userImpact": "medium",
      "dependencies": [],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": false,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Fix/repair/lint components integrated into fix workflow",
          "Status integration requires health metrics and summary",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:44.650Z"
      },
      "lifecycle": {
        "created": "2025-09-22 21:33:47 +0900",
        "lastUpdated": "2025-09-22T12:33:11.324Z",
        "lastIntegrated": "2025-09-25T09:41:44.711Z",
        "status": "active"
      }
    },
    {
      "name": "fix-unused-vars",
      "path": "scripts/fix-unused-vars.sh",
      "type": "utility",
      "purpose": "fix, test, check",
      "riskLevel": "low",
      "userImpact": "medium",
      "dependencies": [],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": false,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Fix/repair/lint components integrated into fix workflow",
          "Status integration requires health metrics and summary",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:44.505Z"
      },
      "lifecycle": {
        "created": "2025-09-23 12:00:27 +0900",
        "lastUpdated": "2025-09-23T01:11:01.837Z",
        "lastIntegrated": "2025-09-25T09:41:44.566Z",
        "status": "active"
      }
    },
    {
      "name": "fix-unused-vars-batch",
      "path": "scripts/fix-unused-vars-batch.ts",
      "type": "utility",
      "purpose": "fix",
      "riskLevel": "medium",
      "userImpact": "medium",
      "dependencies": [
        "fs",
        "child_process"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": false,
          "includeInSync": false,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Fix/repair/lint components integrated into fix workflow",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-25T09:41:44.566Z"
      },
      "lifecycle": {
        "created": "2025-09-25T09:41:44.648Z",
        "lastUpdated": "2025-09-25T09:07:53.701Z",
        "lastIntegrated": "2025-09-25T09:41:44.648Z",
        "status": "active"
      }
    },
    {
      "name": "forbidden-direct-http",
      "path": "scripts/forbidden-direct-http.sh",
      "type": "utility",
      "purpose": "check, git",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [],
      "integrationPoints": [],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:44.442Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-22T09:23:47.936Z",
        "lastIntegrated": "2025-09-25T09:41:44.503Z",
        "status": "active"
      }
    },
    {
      "name": "gating",
      "path": "scripts/dx/gating.ts",
      "type": "utility",
      "purpose": "status, fix, test, check",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [],
      "integrationPoints": [],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": false,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Fix/repair/lint components integrated into fix workflow",
          "Status integration requires health metrics and summary",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:48.755Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-23T08:53:34.940Z",
        "lastIntegrated": "2025-09-25T09:41:48.814Z",
        "status": "active"
      }
    },
    {
      "name": "gating_integrator",
      "path": "scripts/lib/gating_integrator.ts",
      "type": "utility",
      "purpose": "status, sync, validate, check, audit",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "./budget_guardian.js",
        "./agent_logger.js"
      ],
      "integrationPoints": [],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:48.036Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-23T08:53:35.287Z",
        "lastIntegrated": "2025-09-25T09:41:48.101Z",
        "status": "active"
      }
    },
    {
      "name": "generate_dev_session_report",
      "path": "scripts/generate_dev_session_report.js",
      "type": "development",
      "purpose": "status, fix, test, check, git",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "child_process",
        "path"
      ],
      "integrationPoints": [],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "advanced",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "Developer/debug/advanced tools placed in advanced layer",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:44.259Z"
      },
      "lifecycle": {
        "created": "2025-09-24 14:36:53 +0900",
        "lastUpdated": "2025-09-24T09:14:44.975Z",
        "lastIntegrated": "2025-09-25T09:41:44.315Z",
        "status": "active"
      }
    },
    {
      "name": "generate_system_map",
      "path": "scripts/generate_system_map.ts",
      "type": "system",
      "purpose": "test",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path",
        "url"
      ],
      "integrationPoints": [],
      "constraints": [
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": false,
          "includeInSync": false,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "System/internal/engine components hidden in internal layer",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-25T09:41:44.137Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-23T08:53:35.072Z",
        "lastIntegrated": "2025-09-25T09:41:44.196Z",
        "status": "active"
      }
    },
    {
      "name": "generate_system_map",
      "path": "scripts/generate_system_map.js",
      "type": "system",
      "purpose": "test",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [],
      "integrationPoints": [],
      "constraints": [
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": false,
          "includeInSync": false,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "System/internal/engine components hidden in internal layer",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-25T09:41:44.197Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-23T08:53:35.067Z",
        "lastIntegrated": "2025-09-25T09:41:44.258Z",
        "status": "active"
      }
    },
    {
      "name": "generate-agent",
      "path": "scripts/generate-agent.sh",
      "type": "utility",
      "purpose": "sync, test",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "../core/baseAgent.js",
        "../shared/types.js",
        "../shared/logger.js",
        "vitest",
        "../src/agents/$(basename ",
        "../src/shared/logger"
      ],
      "integrationPoints": [],
      "constraints": [
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": false,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Sync/git/commit components integrated into sync workflow",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-25T09:41:44.378Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-22T09:23:47.935Z",
        "lastIntegrated": "2025-09-25T09:41:44.440Z",
        "status": "active"
      }
    },
    {
      "name": "generate-system-docs",
      "path": "scripts/generate-system-docs.sh",
      "type": "system",
      "purpose": "status, security, sync, fix, deploy, test, check",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "../core/baseAgent.js",
        "../agents/myAgent.js",
        "../shared/errors.js"
      ],
      "integrationPoints": [],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": true
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": true,
        "reasoning": [
          "Deployment/release operations require approval",
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "Deploy/release/ship components integrated into ship workflow",
          "System/internal/engine components hidden in internal layer",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:44.316Z"
      },
      "lifecycle": {
        "created": "2025-09-22 21:04:17 +0900",
        "lastUpdated": "2025-09-22T11:49:25.819Z",
        "lastIntegrated": "2025-09-25T09:41:44.377Z",
        "status": "active"
      }
    },
    {
      "name": "git_hygiene",
      "path": "scripts/git_hygiene.sh",
      "type": "utility",
      "purpose": "git",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [],
      "integrationPoints": [],
      "constraints": [
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": false,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Sync/git/commit components integrated into sync workflow",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-25T09:41:44.071Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-22T09:23:47.934Z",
        "lastIntegrated": "2025-09-25T09:41:44.136Z",
        "status": "active"
      }
    },
    {
      "name": "hallucination_rules",
      "path": "scripts/metrics/hallucination_rules.ts",
      "type": "utility",
      "purpose": "test",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "fs"
      ],
      "integrationPoints": [],
      "constraints": [
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": false,
          "includeInSync": false,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-30T03:12:13.348Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-26T09:29:46.275Z",
        "lastIntegrated": "2025-09-30T03:12:13.406Z",
        "status": "active"
      }
    },
    {
      "name": "handoff-generator",
      "path": "scripts/handoff-generator.ts",
      "type": "generator",
      "purpose": "status, sync, fix, test, check, audit",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "path",
        "child_process"
      ],
      "integrationPoints": [
        "unified-dashboard"
      ],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-25T09:41:44.003Z"
      },
      "lifecycle": {
        "created": "2025-09-25T09:41:44.069Z",
        "lastUpdated": "2025-09-25T07:48:31.747Z",
        "lastIntegrated": "2025-09-25T09:41:44.069Z",
        "status": "active"
      }
    },
    {
      "name": "install-git-hooks",
      "path": "scripts/install-git-hooks.sh",
      "type": "utility",
      "purpose": "fix, test, check, git",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [],
      "integrationPoints": [],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:43.948Z"
      },
      "lifecycle": {
        "created": "2025-09-25 11:24:04 +0900",
        "lastUpdated": "2025-09-25T02:15:30.481Z",
        "lastIntegrated": "2025-09-25T09:41:44.002Z",
        "status": "active"
      }
    },
    {
      "name": "integrated-maintenance-orchestrator",
      "path": "scripts/lib/integrated-maintenance-orchestrator.ts",
      "type": "utility",
      "purpose": "status, security, sync, fix, check, audit",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "./component-integration-adapter.js",
        "./core-system-hub.js",
        "./safe-automation-guard.js",
        "./interactive-approval-system.js",
        "child_process",
        "perf_hooks"
      ],
      "integrationPoints": [],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-26T01:32:26.280Z"
      },
      "lifecycle": {
        "created": "2025-09-26T01:32:26.385Z",
        "lastUpdated": "2025-09-25T10:10:27.117Z",
        "lastIntegrated": "2025-09-26T01:32:26.385Z",
        "status": "active"
      }
    },
    {
      "name": "integration-enforcement-system",
      "path": "scripts/integration-enforcement-system.ts",
      "type": "system",
      "purpose": "status, security, sync, fix, deploy, test, validate, check, git, audit",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "path",
        "./design-principle-engine.js",
        "${importPath}"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": true
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": true,
        "reasoning": [
          "Deployment/release operations require approval",
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "Deploy/release/ship components integrated into ship workflow",
          "System/internal/engine components hidden in internal layer",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-26T01:32:25.424Z"
      },
      "lifecycle": {
        "created": "2025-09-26T01:32:25.484Z",
        "lastUpdated": "2025-09-25T09:44:36.418Z",
        "lastIntegrated": "2025-09-26T01:32:25.484Z",
        "status": "active"
      }
    },
    {
      "name": "integration-history-tracker",
      "path": "scripts/lib/integration-history-tracker.ts",
      "type": "utility",
      "purpose": "status, sync, test",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "events",
        "fs",
        "path"
      ],
      "integrationPoints": [],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-26T01:32:26.220Z"
      },
      "lifecycle": {
        "created": "2025-09-26T01:32:26.279Z",
        "lastUpdated": "2025-09-25T10:49:09.629Z",
        "lastIntegrated": "2025-09-26T01:32:26.279Z",
        "status": "active"
      }
    },
    {
      "name": "integration-improvement-engine",
      "path": "scripts/integration-improvement-engine.ts",
      "type": "system",
      "purpose": "status, security, sync, fix, test, check, audit",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path",
        "./system-integration-analyzer.js",
        "./issue-tracker.js",
        "./security-audit-checker.js",
        "./system-integration-analyzer.js"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "System/internal/engine components hidden in internal layer",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:43.792Z"
      },
      "lifecycle": {
        "created": "2025-09-25 13:25:09 +0900",
        "lastUpdated": "2025-09-25T04:30:54.940Z",
        "lastIntegrated": "2025-09-25T09:41:43.845Z",
        "status": "active"
      }
    },
    {
      "name": "integration-strategy-handler",
      "path": "scripts/lib/integration-strategy-handler.ts",
      "type": "utility",
      "purpose": "status, security, sync, test, check",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "events",
        "fs",
        "path",
        "./externalized-decision-matrix.js",
        "./component-harmony-analyzer.js",
        "./self-management-tracker.js"
      ],
      "integrationPoints": [],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-26T01:32:26.157Z"
      },
      "lifecycle": {
        "created": "2025-09-26T01:32:26.218Z",
        "lastUpdated": "2025-09-25T10:47:49.415Z",
        "lastIntegrated": "2025-09-26T01:32:26.218Z",
        "status": "active"
      }
    },
    {
      "name": "interactive-approval-handler",
      "path": "scripts/interactive-approval-handler.ts",
      "type": "utility",
      "purpose": "status, security, sync, fix",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "child_process",
        "fs",
        "path",
        "readline"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:43.726Z"
      },
      "lifecycle": {
        "created": "2025-09-25T09:41:43.790Z",
        "lastUpdated": "2025-09-25T08:00:55.533Z",
        "lastIntegrated": "2025-09-25T09:41:43.790Z",
        "status": "active"
      }
    },
    {
      "name": "interactive-approval-system",
      "path": "scripts/lib/interactive-approval-system.ts",
      "type": "system",
      "purpose": "sync, fix, check",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "readline",
        "./safe-automation-guard.js"
      ],
      "integrationPoints": [],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "System/internal/engine components hidden in internal layer",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-26T04:12:22.185Z"
      },
      "lifecycle": {
        "created": "2025-09-26T04:12:22.246Z",
        "lastUpdated": "2025-09-26T04:11:44.171Z",
        "lastIntegrated": "2025-09-26T04:12:22.246Z",
        "status": "active"
      }
    },
    {
      "name": "interactive-maintenance-handler",
      "path": "scripts/interactive-maintenance-handler.ts",
      "type": "utility",
      "purpose": "sync, fix",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "readline",
        "chalk"
      ],
      "integrationPoints": [],
      "constraints": [
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": false,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-26T01:32:25.363Z"
      },
      "lifecycle": {
        "created": "2025-09-26T01:32:25.423Z",
        "lastUpdated": "2025-09-26T01:08:18.136Z",
        "lastIntegrated": "2025-09-26T01:32:25.423Z",
        "status": "active"
      }
    },
    {
      "name": "interactive-recommendation-handler",
      "path": "scripts/lib/interactive-recommendation-handler.ts",
      "type": "utility",
      "purpose": "security, sync, fix, test, audit",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "readline",
        "child_process"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:47.973Z"
      },
      "lifecycle": {
        "created": "2025-09-25T09:41:48.034Z",
        "lastUpdated": "2025-09-25T08:20:41.521Z",
        "lastIntegrated": "2025-09-25T09:41:48.034Z",
        "status": "active"
      }
    },
    {
      "name": "issue-tracker",
      "path": "scripts/issue-tracker.ts",
      "type": "utility",
      "purpose": "status, test",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path"
      ],
      "integrationPoints": [
        "unified-dashboard",
        "package.json",
        "documentation"
      ],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": false,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Status integration requires health metrics and summary",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-25T09:41:43.670Z"
      },
      "lifecycle": {
        "created": "2025-09-25 13:25:09 +0900",
        "lastUpdated": "2025-09-25T04:30:54.954Z",
        "lastIntegrated": "2025-09-25T09:41:43.725Z",
        "status": "active"
      }
    },
    {
      "name": "llm-signal-injector",
      "path": "scripts/docs/llm-signal-injector.ts",
      "type": "utility",
      "purpose": "sync, validate",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path",
        "glob"
      ],
      "integrationPoints": [],
      "constraints": [
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": false,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Sync/git/commit components integrated into sync workflow",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-25T09:41:49.186Z"
      },
      "lifecycle": {
        "created": "2025-09-25 11:24:04 +0900",
        "lastUpdated": "2025-09-25T04:30:54.742Z",
        "lastIntegrated": "2025-09-25T09:41:49.241Z",
        "status": "active"
      }
    },
    {
      "name": "load_thresholds",
      "path": "scripts/dx/load_thresholds.ts",
      "type": "utility",
      "purpose": "sync, audit",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "./types.js"
      ],
      "integrationPoints": [],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:48.697Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-23T08:53:34.953Z",
        "lastIntegrated": "2025-09-25T09:41:48.754Z",
        "status": "legacy"
      }
    },
    {
      "name": "maintain-report-generator",
      "path": "scripts/maintain-report-generator.ts",
      "type": "generator",
      "purpose": "status, security, sync, fix, test, git, audit",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path",
        "child_process"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-26T03:12:33.970Z"
      },
      "lifecycle": {
        "created": "2025-09-26T03:12:34.041Z",
        "lastUpdated": "2025-09-26T02:59:12.851Z",
        "lastIntegrated": "2025-09-26T03:12:34.041Z",
        "status": "active"
      }
    },
    {
      "name": "manifest_manager",
      "path": "scripts/lib/manifest_manager.ts",
      "type": "utility",
      "purpose": "sync, test, validate, check",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "path",
        "crypto",
        "glob"
      ],
      "integrationPoints": [],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:47.911Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-23T08:53:35.310Z",
        "lastIntegrated": "2025-09-25T09:41:47.971Z",
        "status": "active"
      }
    },
    {
      "name": "net_diag",
      "path": "scripts/net_diag.sh",
      "type": "utility",
      "purpose": "test",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [],
      "integrationPoints": [],
      "constraints": [
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": false,
          "includeInSync": false,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-25T09:41:43.602Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-22T09:23:47.892Z",
        "lastIntegrated": "2025-09-25T09:41:43.669Z",
        "status": "active"
      }
    },
    {
      "name": "onboard-developer",
      "path": "scripts/onboard-developer.sh",
      "type": "development",
      "purpose": "test, check, git",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [],
      "integrationPoints": [],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "advanced",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Developer/debug/advanced tools placed in advanced layer",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:43.540Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-22T09:23:47.898Z",
        "lastIntegrated": "2025-09-25T09:41:43.601Z",
        "status": "active"
      }
    },
    {
      "name": "optimization-engine",
      "path": "scripts/optimization-engine.ts",
      "type": "system",
      "purpose": "sync, fix",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "child_process",
        "fs",
        "path",
        "./lib/interactive-recommendation-handler.js"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": false,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "System/internal/engine components hidden in internal layer",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-25T09:41:43.476Z"
      },
      "lifecycle": {
        "created": "2025-09-25T09:41:43.538Z",
        "lastUpdated": "2025-09-25T08:21:48.617Z",
        "lastIntegrated": "2025-09-25T09:41:43.538Z",
        "status": "active"
      }
    },
    {
      "name": "orchestrator",
      "path": "scripts/agents/orchestrator.ts",
      "type": "utility",
      "purpose": "status, sync, test, check, audit",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "./base_agent",
        "./evidence_agent",
        "./answer_agent",
        "./audit_agent",
        "../utils/budget_guard",
        "../utils/dlq_handler",
        "../utils/threshold_gating"
      ],
      "integrationPoints": [],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:49.765Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-23T08:53:34.541Z",
        "lastIntegrated": "2025-09-25T09:41:49.823Z",
        "status": "active"
      }
    },
    {
      "name": "performance-auto-improver",
      "path": "scripts/performance-auto-improver.ts",
      "type": "utility",
      "purpose": "status, sync",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "./performance-metrics-reporter.js",
        "./lib/core-system-hub.js",
        "child_process",
        "fs",
        "path"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-26T03:49:22.273Z"
      },
      "lifecycle": {
        "created": "2025-09-26T03:49:22.539Z",
        "lastUpdated": "2025-09-26T03:48:55.583Z",
        "lastIntegrated": "2025-09-26T03:49:22.539Z",
        "status": "active"
      }
    },
    {
      "name": "performance-cache",
      "path": "scripts/lib/performance-cache.ts",
      "type": "utility",
      "purpose": "sync, validate, check",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path"
      ],
      "integrationPoints": [
        "unified-dashboard"
      ],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-26T01:32:26.034Z"
      },
      "lifecycle": {
        "created": "2025-09-26T01:32:26.095Z",
        "lastUpdated": "2025-09-25T09:52:41.508Z",
        "lastIntegrated": "2025-09-26T01:32:26.095Z",
        "status": "active"
      }
    },
    {
      "name": "performance-metrics-reporter",
      "path": "scripts/performance-metrics-reporter.ts",
      "type": "utility",
      "purpose": "sync",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "fs/promises",
        "path",
        "./lib/core-system-hub.js"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": false,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Sync/git/commit components integrated into sync workflow",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-26T01:32:25.240Z"
      },
      "lifecycle": {
        "created": "2025-09-26T01:32:25.300Z",
        "lastUpdated": "2025-09-25T10:57:12.762Z",
        "lastIntegrated": "2025-09-26T01:32:25.300Z",
        "status": "active"
      }
    },
    {
      "name": "persist_reports",
      "path": "scripts/dx/persist_reports.ts",
      "type": "utility",
      "purpose": "status, sync, test, validate, check",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "ajv",
        "ajv-formats",
        "./types.js",
        "./load_thresholds.js"
      ],
      "integrationPoints": [],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:48.635Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-23T08:53:34.972Z",
        "lastIntegrated": "2025-09-25T09:41:48.695Z",
        "status": "active"
      }
    },
    {
      "name": "pii_license_scan",
      "path": "scripts/metrics/pii_license_scan.ts",
      "type": "utility",
      "purpose": "security, deploy, test",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "fs"
      ],
      "integrationPoints": [],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": false,
          "includeInFix": false,
          "includeInShip": true
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": true,
        "reasoning": [
          "Deployment/release operations require approval",
          "Security components mandatory in status for safety",
          "Deploy/release/ship components integrated into ship workflow",
          "Status integration requires health metrics and summary",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-30T03:12:13.288Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-26T09:29:46.268Z",
        "lastIntegrated": "2025-09-30T03:12:13.346Z",
        "status": "active"
      }
    },
    {
      "name": "post_run_commit",
      "path": "scripts/post_run_commit.sh",
      "type": "utility",
      "purpose": "status, git",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [],
      "integrationPoints": [],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:43.401Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-22T09:23:47.881Z",
        "lastIntegrated": "2025-09-25T09:41:43.475Z",
        "status": "active"
      }
    },
    {
      "name": "progress-indicator",
      "path": "scripts/lib/progress-indicator.ts",
      "type": "utility",
      "purpose": "utility",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [],
      "integrationPoints": [],
      "constraints": [
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": false,
          "includeInSync": false,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-25T09:41:47.848Z"
      },
      "lifecycle": {
        "created": "2025-09-25T09:41:47.910Z",
        "lastUpdated": "2025-09-25T08:56:21.125Z",
        "lastIntegrated": "2025-09-25T09:41:47.910Z",
        "status": "active"
      }
    },
    {
      "name": "qtype_distribution",
      "path": "scripts/metrics/qtype_distribution.ts",
      "type": "utility",
      "purpose": "test",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "fs"
      ],
      "integrationPoints": [],
      "constraints": [
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": false,
          "includeInSync": false,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-30T03:12:13.228Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-26T09:29:46.279Z",
        "lastIntegrated": "2025-09-30T03:12:13.285Z",
        "status": "active"
      }
    },
    {
      "name": "quick-check",
      "path": "scripts/quick-check.ts",
      "type": "utility",
      "purpose": "sync, test, check, git",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "child_process",
        "./lib/design-principle-mapper.js"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-26T03:12:33.907Z"
      },
      "lifecycle": {
        "created": "2025-09-26T03:12:33.967Z",
        "lastUpdated": "2025-09-26T03:00:34.456Z",
        "lastIntegrated": "2025-09-26T03:12:33.967Z",
        "status": "active"
      }
    },
    {
      "name": "quick-doc-updater",
      "path": "scripts/quick-doc-updater.ts",
      "type": "utility",
      "purpose": "status, sync, fix, test, check, audit",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path",
        "child_process",
        "util"
      ],
      "integrationPoints": [],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:43.342Z"
      },
      "lifecycle": {
        "created": "2025-09-25 13:25:09 +0900",
        "lastUpdated": "2025-09-25T04:30:55.288Z",
        "lastIntegrated": "2025-09-25T09:41:43.399Z",
        "status": "active"
      }
    },
    {
      "name": "real-time-policy-reflector",
      "path": "scripts/real-time-policy-reflector.ts",
      "type": "utility",
      "purpose": "status, sync, validate, audit",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "child_process",
        "fs"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:43.276Z"
      },
      "lifecycle": {
        "created": "2025-09-25T09:41:43.340Z",
        "lastUpdated": "2025-09-25T07:48:32.122Z",
        "lastIntegrated": "2025-09-25T09:41:43.340Z",
        "status": "active"
      }
    },
    {
      "name": "recommend_actions",
      "path": "scripts/dx/recommend_actions.ts",
      "type": "utility",
      "purpose": "test",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [],
      "integrationPoints": [],
      "constraints": [
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": false,
          "includeInSync": false,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-25T09:41:48.577Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-23T08:53:34.990Z",
        "lastIntegrated": "2025-09-25T09:41:48.633Z",
        "status": "active"
      }
    },
    {
      "name": "refactor-advisor",
      "path": "scripts/refactor-advisor.ts",
      "type": "utility",
      "purpose": "sync, fix, check, audit",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path",
        "glob"
      ],
      "integrationPoints": [],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:43.218Z"
      },
      "lifecycle": {
        "created": "2025-09-25 11:24:04 +0900",
        "lastUpdated": "2025-09-25T04:30:55.305Z",
        "lastIntegrated": "2025-09-25T09:41:43.273Z",
        "status": "active"
      }
    },
    {
      "name": "refactor-auditor",
      "path": "scripts/refactor-auditor.ts",
      "type": "utility",
      "purpose": "security, sync, fix, deploy, test, validate, check, git, audit",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path",
        "glob",
        "./lib/design-principle-mapper.js"
      ],
      "integrationPoints": [
        "unified-dashboard"
      ],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": true
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": true,
        "reasoning": [
          "Deployment/release operations require approval",
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "Deploy/release/ship components integrated into ship workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-30T03:27:31.910Z"
      },
      "lifecycle": {
        "created": "2025-09-24 16:54:07 +0900",
        "lastUpdated": "2025-09-30T03:23:27.234Z",
        "lastIntegrated": "2025-09-30T03:27:32.000Z",
        "status": "active"
      }
    },
    {
      "name": "reference-tracker",
      "path": "scripts/reference-tracker.ts",
      "type": "utility",
      "purpose": "status, sync, audit",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path"
      ],
      "integrationPoints": [
        "unified-dashboard"
      ],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-25T09:41:43.094Z"
      },
      "lifecycle": {
        "created": "2025-09-25T09:41:43.158Z",
        "lastUpdated": "2025-09-25T07:48:32.185Z",
        "lastIntegrated": "2025-09-25T09:41:43.158Z",
        "status": "active"
      }
    },
    {
      "name": "resolve-workarounds",
      "path": "scripts/resolve-workarounds.ts",
      "type": "engine",
      "purpose": "status, security, sync, fix, check",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "child_process",
        "fs",
        "path",
        "./lib/workaround-resolution-engine.js"
      ],
      "integrationPoints": [],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "System/internal/engine components hidden in internal layer",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-26T01:32:25.180Z"
      },
      "lifecycle": {
        "created": "2025-09-26T01:32:25.239Z",
        "lastUpdated": "2025-09-25T10:34:48.898Z",
        "lastIntegrated": "2025-09-26T01:32:25.239Z",
        "status": "active"
      }
    },
    {
      "name": "routing-status",
      "path": "scripts/routing-status.ts",
      "type": "utility",
      "purpose": "status, sync",
      "riskLevel": "low",
      "userImpact": "blocking",
      "dependencies": [
        "./lib/core-system-hub.js"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "core",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "High user impact requires core placement for simplicity",
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-26T01:32:25.119Z"
      },
      "lifecycle": {
        "created": "2025-09-26T01:32:25.179Z",
        "lastUpdated": "2025-09-25T10:54:28.161Z",
        "lastIntegrated": "2025-09-26T01:32:25.179Z",
        "status": "active"
      }
    },
    {
      "name": "safe-automation-guard",
      "path": "scripts/lib/safe-automation-guard.ts",
      "type": "utility",
      "purpose": "sync, fix, check, audit",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path"
      ],
      "integrationPoints": [],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-26T01:32:25.973Z"
      },
      "lifecycle": {
        "created": "2025-09-26T01:32:26.034Z",
        "lastUpdated": "2025-09-25T09:57:23.819Z",
        "lastIntegrated": "2025-09-26T01:32:26.034Z",
        "status": "active"
      }
    },
    {
      "name": "safety-analyzer",
      "path": "scripts/safety-analyzer.ts",
      "type": "utility",
      "purpose": "fix, test, check",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "glob",
        "./smart-refactor-state.js"
      ],
      "integrationPoints": [],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": false,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Fix/repair/lint components integrated into fix workflow",
          "Status integration requires health metrics and summary",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:43.037Z"
      },
      "lifecycle": {
        "created": "2025-09-24 17:41:28 +0900",
        "lastUpdated": "2025-09-24T09:14:45.492Z",
        "lastIntegrated": "2025-09-25T09:41:43.092Z",
        "status": "active"
      }
    },
    {
      "name": "sample_evaluation_data",
      "path": "scripts/sample_evaluation_data.js",
      "type": "utility",
      "purpose": "test",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "fs"
      ],
      "integrationPoints": [],
      "constraints": [
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": false,
          "includeInSync": false,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-25T09:41:42.914Z"
      },
      "lifecycle": {
        "created": "2025-09-24 12:46:42 +0900",
        "lastUpdated": "2025-09-24T09:14:45.507Z",
        "lastIntegrated": "2025-09-25T09:41:43.035Z",
        "status": "active"
      }
    },
    {
      "name": "scan_secrets",
      "path": "scripts/scan_secrets.sh",
      "type": "utility",
      "purpose": "git",
      "riskLevel": "critical",
      "userImpact": "low",
      "dependencies": [],
      "integrationPoints": [],
      "constraints": [
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": false,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": true,
        "reasoning": [
          "High/critical risk requires approval",
          "Sync/git/commit components integrated into sync workflow",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-25T09:41:42.850Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-22T09:23:47.897Z",
        "lastIntegrated": "2025-09-25T09:41:42.912Z",
        "status": "active"
      }
    },
    {
      "name": "security-audit",
      "path": "scripts/security-audit.sh",
      "type": "utility",
      "purpose": "security, fix, deploy, validate, check, git, audit",
      "riskLevel": "critical",
      "userImpact": "high",
      "dependencies": [],
      "integrationPoints": [
        "unified-dashboard"
      ],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "core",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": true
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": true,
        "reasoning": [
          "High user impact requires core placement for simplicity",
          "High/critical risk requires approval",
          "Deployment/release operations require approval",
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "Deploy/release/ship components integrated into ship workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-25T09:41:42.736Z"
      },
      "lifecycle": {
        "created": "2025-09-23 17:44:24 +0900",
        "lastUpdated": "2025-09-23T08:32:12.488Z",
        "lastIntegrated": "2025-09-25T09:41:42.795Z",
        "status": "active"
      }
    },
    {
      "name": "security-audit-checker",
      "path": "scripts/security-audit-checker.ts",
      "type": "validation",
      "purpose": "security, sync, fix, check, git, audit",
      "riskLevel": "critical",
      "userImpact": "high",
      "dependencies": [
        "child_process",
        "fs",
        "path"
      ],
      "integrationPoints": [
        "unified-dashboard",
        "package.json"
      ],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "core",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": true,
        "reasoning": [
          "High user impact requires core placement for simplicity",
          "High/critical risk requires approval",
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-26T01:32:25.066Z"
      },
      "lifecycle": {
        "created": "2025-09-25 13:25:09 +0900",
        "lastUpdated": "2025-09-25T09:43:29.172Z",
        "lastIntegrated": "2025-09-26T01:32:25.118Z",
        "status": "active"
      }
    },
    {
      "name": "seed_manager",
      "path": "scripts/lib/seed_manager.ts",
      "type": "utility",
      "purpose": "utility",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [],
      "integrationPoints": [],
      "constraints": [
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": false,
          "includeInSync": false,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-25T09:41:47.788Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-23T08:53:35.328Z",
        "lastIntegrated": "2025-09-25T09:41:47.847Z",
        "status": "active"
      }
    },
    {
      "name": "self-management-tracker",
      "path": "scripts/lib/self-management-tracker.ts",
      "type": "utility",
      "purpose": "status, sync, test, audit",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "events",
        "fs",
        "path",
        "child_process"
      ],
      "integrationPoints": [],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-26T01:32:25.911Z"
      },
      "lifecycle": {
        "created": "2025-09-26T01:32:25.972Z",
        "lastUpdated": "2025-09-25T10:44:26.744Z",
        "lastIntegrated": "2025-09-26T01:32:25.972Z",
        "status": "active"
      }
    },
    {
      "name": "session_report",
      "path": "scripts/lib/session_report.ts",
      "type": "utility",
      "purpose": "status, test, validate, git",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path"
      ],
      "integrationPoints": [],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:47.729Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-23T08:53:35.355Z",
        "lastIntegrated": "2025-09-25T09:41:47.787Z",
        "status": "active"
      }
    },
    {
      "name": "session_report_standalone",
      "path": "scripts/session_report_standalone.sh",
      "type": "utility",
      "purpose": "test",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [],
      "integrationPoints": [],
      "constraints": [
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": false,
          "includeInSync": false,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-25T09:41:42.672Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-22T09:23:47.893Z",
        "lastIntegrated": "2025-09-25T09:41:42.734Z",
        "status": "active"
      }
    },
    {
      "name": "setup-anthropic-api",
      "path": "scripts/setup-anthropic-api.sh",
      "type": "utility",
      "purpose": "status, sync, test, check",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [],
      "integrationPoints": [],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:42.612Z"
      },
      "lifecycle": {
        "created": "2025-09-22 21:49:52 +0900",
        "lastUpdated": "2025-09-22T12:46:39.698Z",
        "lastIntegrated": "2025-09-25T09:41:42.671Z",
        "status": "active"
      }
    },
    {
      "name": "setup-auto-commit",
      "path": "scripts/setup-auto-commit.sh",
      "type": "utility",
      "purpose": "check, git",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [],
      "integrationPoints": [],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:42.550Z"
      },
      "lifecycle": {
        "created": "2025-09-22 21:27:59 +0900",
        "lastUpdated": "2025-09-22T12:25:23.417Z",
        "lastIntegrated": "2025-09-25T09:41:42.610Z",
        "status": "active"
      }
    },
    {
      "name": "setup-dev-environment",
      "path": "scripts/setup-dev-environment.sh",
      "type": "development",
      "purpose": "status, fix, test, check, git",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [],
      "integrationPoints": [],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "advanced",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "Developer/debug/advanced tools placed in advanced layer",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:42.491Z"
      },
      "lifecycle": {
        "created": "2025-09-22 20:40:16 +0900",
        "lastUpdated": "2025-09-23T02:49:35.707Z",
        "lastIntegrated": "2025-09-25T09:41:42.549Z",
        "status": "active"
      }
    },
    {
      "name": "shellcheck_all",
      "path": "scripts/shellcheck_all.sh",
      "type": "utility",
      "purpose": "fix, validate, check, git",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [],
      "integrationPoints": [],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:42.425Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-22T09:23:47.904Z",
        "lastIntegrated": "2025-09-25T09:41:42.489Z",
        "status": "active"
      }
    },
    {
      "name": "simplified-approval-system",
      "path": "scripts/lib/simplified-approval-system.ts",
      "type": "system",
      "purpose": "sync, git",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "readline",
        "./approval-criteria.js",
        "./approval-queue.js"
      ],
      "integrationPoints": [],
      "constraints": [
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": false,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Sync/git/commit components integrated into sync workflow",
          "System/internal/engine components hidden in internal layer",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-30T03:27:32.002Z"
      },
      "lifecycle": {
        "created": "2025-09-29 18:54:21 +0900",
        "lastUpdated": "2025-09-30T03:22:26.091Z",
        "lastIntegrated": "2025-09-30T03:27:32.069Z",
        "status": "active"
      }
    },
    {
      "name": "slash-commands",
      "path": "scripts/slash-commands.sh",
      "type": "utility",
      "purpose": "status, security, sync, fix, deploy, test, check, git, audit",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": true
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": true,
        "reasoning": [
          "Deployment/release operations require approval",
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "Deploy/release/ship components integrated into ship workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:42.369Z"
      },
      "lifecycle": {
        "created": "2025-09-22 21:04:17 +0900",
        "lastUpdated": "2025-09-25T03:22:17.117Z",
        "lastIntegrated": "2025-09-25T09:41:42.423Z",
        "status": "active"
      }
    },
    {
      "name": "smart-approval-system",
      "path": "scripts/smart-approval-system.ts",
      "type": "system",
      "purpose": "security, sync, test",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "System/internal/engine components hidden in internal layer",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:42.313Z"
      },
      "lifecycle": {
        "created": "2025-09-25 13:25:09 +0900",
        "lastUpdated": "2025-09-25T04:30:55.393Z",
        "lastIntegrated": "2025-09-25T09:41:42.368Z",
        "status": "active"
      }
    },
    {
      "name": "smart-decision-matrix",
      "path": "scripts/lib/smart-decision-matrix.ts",
      "type": "utility",
      "purpose": "sync, test, check, audit",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "perf_hooks",
        "fs",
        "path",
        "yaml"
      ],
      "integrationPoints": [],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-26T02:10:51.488Z"
      },
      "lifecycle": {
        "created": "2025-09-26T02:10:51.565Z",
        "lastUpdated": "2025-09-26T02:00:43.427Z",
        "lastIntegrated": "2025-09-26T02:10:51.565Z",
        "status": "active"
      }
    },
    {
      "name": "smart-maintenance-orchestrator",
      "path": "scripts/smart-maintenance-orchestrator.ts",
      "type": "engine",
      "purpose": "status, security, sync, fix, test, check, git, audit",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "child_process",
        "fs",
        "path",
        "./lib/safe-automation-guard.js",
        "./lib/simplified-approval-system.js",
        "./lib/system-integration-orchestrator.js",
        "./lib/auto-fix-manager.js"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "System/internal/engine components hidden in internal layer",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-30T03:27:31.750Z"
      },
      "lifecycle": {
        "created": "2025-09-29 18:54:21 +0900",
        "lastUpdated": "2025-09-30T03:21:54.622Z",
        "lastIntegrated": "2025-09-30T03:27:31.908Z",
        "status": "active"
      }
    },
    {
      "name": "smart-refactor-auditor",
      "path": "scripts/smart-refactor-auditor.ts",
      "type": "utility",
      "purpose": "status, sync, fix, test, check, audit",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "./refactor-auditor.js",
        "./smart-refactor-state.js",
        "./safety-analyzer.js",
        "fs",
        "path"
      ],
      "integrationPoints": [
        "unified-dashboard",
        "package.json"
      ],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-26T03:12:33.591Z"
      },
      "lifecycle": {
        "created": "2025-09-24 17:41:28 +0900",
        "lastUpdated": "2025-09-26T02:42:20.893Z",
        "lastIntegrated": "2025-09-26T03:12:33.772Z",
        "status": "active"
      }
    },
    {
      "name": "smart-refactor-state",
      "path": "scripts/smart-refactor-state.ts",
      "type": "utility",
      "purpose": "sync, fix, test, check, audit",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path"
      ],
      "integrationPoints": [],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:42.102Z"
      },
      "lifecycle": {
        "created": "2025-09-24 17:41:28 +0900",
        "lastUpdated": "2025-09-24T09:14:45.564Z",
        "lastIntegrated": "2025-09-25T09:41:42.159Z",
        "status": "active"
      }
    },
    {
      "name": "smart-status",
      "path": "scripts/smart-status.ts",
      "type": "utility",
      "purpose": "status, sync, fix, check, git, audit",
      "riskLevel": "low",
      "userImpact": "blocking",
      "dependencies": [
        "child_process",
        "path",
        "url"
      ],
      "integrationPoints": [],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "core",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "High user impact requires core placement for simplicity",
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:42.044Z"
      },
      "lifecycle": {
        "created": "2025-09-25 11:24:04 +0900",
        "lastUpdated": "2025-09-25T04:30:55.437Z",
        "lastIntegrated": "2025-09-25T09:41:42.100Z",
        "status": "active"
      }
    },
    {
      "name": "smart-sync",
      "path": "scripts/smart-sync.sh",
      "type": "utility",
      "purpose": "status, sync, check, git",
      "riskLevel": "low",
      "userImpact": "medium",
      "dependencies": [],
      "integrationPoints": [],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:41.977Z"
      },
      "lifecycle": {
        "created": "2025-09-22 21:41:42 +0900",
        "lastUpdated": "2025-09-22T12:40:20.720Z",
        "lastIntegrated": "2025-09-25T09:41:42.043Z",
        "status": "active"
      }
    },
    {
      "name": "smoke_online",
      "path": "scripts/smoke_online.sh",
      "type": "utility",
      "purpose": "test",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [],
      "integrationPoints": [],
      "constraints": [
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": false,
          "includeInSync": false,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-25T09:41:41.911Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-22T09:23:47.895Z",
        "lastIntegrated": "2025-09-25T09:41:41.976Z",
        "status": "active"
      }
    },
    {
      "name": "smoke_rehearsal",
      "path": "scripts/preflight/smoke_rehearsal.sh",
      "type": "utility",
      "purpose": "status, test, validate, check",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [],
      "integrationPoints": [],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": false,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Status integration requires health metrics and summary",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:47.007Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-22T09:23:47.941Z",
        "lastIntegrated": "2025-09-25T09:41:47.068Z",
        "status": "active"
      }
    },
    {
      "name": "snapshot_commit",
      "path": "scripts/snapshot_commit.sh",
      "type": "utility",
      "purpose": "security, fix, test, git",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [],
      "integrationPoints": [],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:41.847Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-22T09:23:47.919Z",
        "lastIntegrated": "2025-09-25T09:41:41.910Z",
        "status": "active"
      }
    },
    {
      "name": "snapshot-browser",
      "path": "scripts/snapshot-browser.ts",
      "type": "utility",
      "purpose": "sync, fix, git",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "./lib/auto-fix-manager.js"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": false,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-26T01:32:24.941Z"
      },
      "lifecycle": {
        "created": "2025-09-26T01:32:25.002Z",
        "lastUpdated": "2025-09-26T00:32:57.416Z",
        "lastIntegrated": "2025-09-26T01:32:25.002Z",
        "status": "active"
      }
    },
    {
      "name": "stability_integration",
      "path": "scripts/utils/stability_integration.ts",
      "type": "utility",
      "purpose": "status, sync, test, check, audit",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "./budget_guard",
        "./dlq_handler",
        "./threshold_gating",
        "./checkpoint_manager",
        "../agents/base_agent"
      ],
      "integrationPoints": [],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:46.646Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-23T08:53:35.657Z",
        "lastIntegrated": "2025-09-25T09:41:46.702Z",
        "status": "active"
      }
    },
    {
      "name": "sync-health-reporter",
      "path": "scripts/sync-health-reporter.ts",
      "type": "utility",
      "purpose": "sync, fix, check",
      "riskLevel": "low",
      "userImpact": "medium",
      "dependencies": [
        "fs",
        "path",
        "child_process",
        "util"
      ],
      "integrationPoints": [],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:41.794Z"
      },
      "lifecycle": {
        "created": "2025-09-25 11:31:28 +0900",
        "lastUpdated": "2025-09-25T04:30:55.454Z",
        "lastIntegrated": "2025-09-25T09:41:41.845Z",
        "status": "active"
      }
    },
    {
      "name": "sync-transaction-system",
      "path": "scripts/sync-transaction-system.ts",
      "type": "system",
      "purpose": "status, security, sync, check, git, audit",
      "riskLevel": "medium",
      "userImpact": "medium",
      "dependencies": [
        "child_process",
        "path"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "System/internal/engine components hidden in internal layer",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:41.739Z"
      },
      "lifecycle": {
        "created": "2025-09-25 13:25:09 +0900",
        "lastUpdated": "2025-09-25T04:30:55.469Z",
        "lastIntegrated": "2025-09-25T09:41:41.792Z",
        "status": "active"
      }
    },
    {
      "name": "system_map",
      "path": "scripts/system_map.sh",
      "type": "system",
      "purpose": "status, git",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [],
      "integrationPoints": [],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "System/internal/engine components hidden in internal layer",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:41.618Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-22T09:23:47.915Z",
        "lastIntegrated": "2025-09-25T09:41:41.683Z",
        "status": "active"
      }
    },
    {
      "name": "system-integration-analyzer",
      "path": "scripts/system-integration-analyzer.ts",
      "type": "system",
      "purpose": "status, security, sync, fix, git, audit",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "path"
      ],
      "integrationPoints": [
        "unified-dashboard",
        "package.json"
      ],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "System/internal/engine components hidden in internal layer",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-25T09:41:41.685Z"
      },
      "lifecycle": {
        "created": "2025-09-25 13:25:09 +0900",
        "lastUpdated": "2025-09-25T04:34:12.331Z",
        "lastIntegrated": "2025-09-25T09:41:41.737Z",
        "status": "active"
      }
    },
    {
      "name": "system-integration-orchestrator",
      "path": "scripts/lib/system-integration-orchestrator.ts",
      "type": "system",
      "purpose": "status, sync, fix, test, check",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "./core-system-hub.js",
        "./component-integration-adapter.js",
        "./adaptive-execution-engine.js",
        "./smart-decision-matrix.js",
        "./workaround-resolution-engine.js",
        "./performance-cache.js",
        "fs",
        "path",
        "child_process"
      ],
      "integrationPoints": [],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "System/internal/engine components hidden in internal layer",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-26T01:32:25.789Z"
      },
      "lifecycle": {
        "created": "2025-09-26T01:32:25.849Z",
        "lastUpdated": "2025-09-25T10:22:01.146Z",
        "lastIntegrated": "2025-09-26T01:32:25.849Z",
        "status": "active"
      }
    },
    {
      "name": "taxonomy",
      "path": "scripts/metrics/taxonomy.ts",
      "type": "utility",
      "purpose": "fix, test, validate, check",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [],
      "integrationPoints": [],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": false,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Fix/repair/lint components integrated into fix workflow",
          "Status integration requires health metrics and summary",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-30T03:12:13.161Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-26T09:29:46.259Z",
        "lastIntegrated": "2025-09-30T03:12:13.227Z",
        "status": "active"
      }
    },
    {
      "name": "test-approval",
      "path": "scripts/test-approval.ts",
      "type": "test",
      "purpose": "security, sync, test",
      "riskLevel": "low",
      "userImpact": "none",
      "dependencies": [
        "fs",
        "path"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:41.553Z"
      },
      "lifecycle": {
        "created": "2025-09-25T09:41:41.616Z",
        "lastUpdated": "2025-09-25T09:21:52.314Z",
        "lastIntegrated": "2025-09-25T09:41:41.616Z",
        "status": "experimental"
      }
    },
    {
      "name": "threshold_gating",
      "path": "scripts/utils/threshold_gating.ts",
      "type": "utility",
      "purpose": "status, deploy",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path"
      ],
      "integrationPoints": [],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": false,
          "includeInFix": false,
          "includeInShip": true
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": true,
        "reasoning": [
          "Deployment/release operations require approval",
          "Status/health/check components integrated into unified dashboard",
          "Deploy/release/ship components integrated into ship workflow",
          "Status integration requires health metrics and summary",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:46.589Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-23T08:53:35.671Z",
        "lastIntegrated": "2025-09-25T09:41:46.645Z",
        "status": "legacy"
      }
    },
    {
      "name": "threshold_manager",
      "path": "scripts/metrics/threshold_manager.ts",
      "type": "utility",
      "purpose": "status, sync, fix, audit",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path",
        "glob"
      ],
      "integrationPoints": [],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-30T03:12:13.069Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-26T09:29:46.255Z",
        "lastIntegrated": "2025-09-30T03:12:13.159Z",
        "status": "legacy"
      }
    },
    {
      "name": "ts-compile-checker",
      "path": "scripts/ts-compile-checker.ts",
      "type": "validation",
      "purpose": "sync, fix, check",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "child_process",
        "util",
        "fs",
        "path",
        "./appropriate-module"
      ],
      "integrationPoints": [],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:41.500Z"
      },
      "lifecycle": {
        "created": "2025-09-25 11:24:04 +0900",
        "lastUpdated": "2025-09-25T04:30:55.507Z",
        "lastIntegrated": "2025-09-25T09:41:41.551Z",
        "status": "active"
      }
    },
    {
      "name": "types",
      "path": "scripts/dx/types.ts",
      "type": "utility",
      "purpose": "status, check, audit",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [],
      "integrationPoints": [
        "unified-dashboard"
      ],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": false,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Status integration requires health metrics and summary",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-25T09:41:48.517Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-23T08:53:35.002Z",
        "lastIntegrated": "2025-09-25T09:41:48.576Z",
        "status": "active"
      }
    },
    {
      "name": "unified-dashboard",
      "path": "scripts/unified-dashboard.ts",
      "type": "engine",
      "purpose": "status, security, sync, fix, test, check, git, audit",
      "riskLevel": "medium",
      "userImpact": "blocking",
      "dependencies": [
        "./issue-tracker.js",
        "./security-audit-checker.js",
        "./system-integration-analyzer.js",
        "./smart-refactor-auditor.js",
        "./handoff-generator.js",
        "./document-optimizer.js",
        "./workaround-detector.js",
        "./reference-tracker.js",
        "./component-registry-system.js",
        "./architectural-evolution-engine.js",
        "child_process",
        "fs",
        "./lib/performance-cache.js"
      ],
      "integrationPoints": [
        "package.json",
        "documentation"
      ],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "High user impact requires core placement for simplicity",
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "System/internal/engine components hidden in internal layer",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-26T01:32:24.878Z"
      },
      "lifecycle": {
        "created": "2025-09-25 13:25:09 +0900",
        "lastUpdated": "2025-09-25T10:06:47.645Z",
        "lastIntegrated": "2025-09-26T01:32:24.939Z",
        "status": "active"
      }
    },
    {
      "name": "unified-reporter",
      "path": "scripts/unified-reporter.ts",
      "type": "utility",
      "purpose": "status, security, sync, audit",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [],
      "integrationPoints": [
        "unified-dashboard",
        "package.json"
      ],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-25T09:41:41.383Z"
      },
      "lifecycle": {
        "created": "2025-09-25T09:41:41.445Z",
        "lastUpdated": "2025-09-25T07:48:32.376Z",
        "lastIntegrated": "2025-09-25T09:41:41.445Z",
        "status": "active"
      }
    },
    {
      "name": "update_anthropic_key",
      "path": "scripts/update_anthropic_key.sh",
      "type": "utility",
      "purpose": "status, test, check",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [],
      "integrationPoints": [],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": false,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Status integration requires health metrics and summary",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:41.320Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-22T09:23:47.937Z",
        "lastIntegrated": "2025-09-25T09:41:41.382Z",
        "status": "active"
      }
    },
    {
      "name": "user-communication-system",
      "path": "scripts/user-communication-system.ts",
      "type": "system",
      "purpose": "sync, fix, test, check, audit",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path",
        "./lib/interactive-recommendation-handler.js"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "System/internal/engine components hidden in internal layer",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-26T01:32:24.660Z"
      },
      "lifecycle": {
        "created": "2025-09-26T01:32:24.877Z",
        "lastUpdated": "2025-09-25T09:47:15.004Z",
        "lastIntegrated": "2025-09-26T01:32:24.877Z",
        "status": "active"
      }
    },
    {
      "name": "validate_report",
      "path": "scripts/preflight/validate_report.sh",
      "type": "utility",
      "purpose": "status, fix, test, validate, check",
      "riskLevel": "low",
      "userImpact": "high",
      "dependencies": [],
      "integrationPoints": [],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "core",
        "integration": {
          "includeInStatus": true,
          "includeInSync": false,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "High user impact requires core placement for simplicity",
          "Status/health/check components integrated into unified dashboard",
          "Fix/repair/lint components integrated into fix workflow",
          "Status integration requires health metrics and summary",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:46.944Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-22T09:23:47.943Z",
        "lastIntegrated": "2025-09-25T09:41:47.006Z",
        "status": "active"
      }
    },
    {
      "name": "validate_report_simple",
      "path": "scripts/preflight/validate_report_simple.sh",
      "type": "utility",
      "purpose": "status, fix, test, validate, check",
      "riskLevel": "low",
      "userImpact": "high",
      "dependencies": [],
      "integrationPoints": [],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "core",
        "integration": {
          "includeInStatus": true,
          "includeInSync": false,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "High user impact requires core placement for simplicity",
          "Status/health/check components integrated into unified dashboard",
          "Fix/repair/lint components integrated into fix workflow",
          "Status integration requires health metrics and summary",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:46.882Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-22T09:23:47.942Z",
        "lastIntegrated": "2025-09-25T09:41:46.943Z",
        "status": "active"
      }
    },
    {
      "name": "validate_toolchain",
      "path": "scripts/validate_toolchain.sh",
      "type": "utility",
      "purpose": "security, fix, validate, git, audit",
      "riskLevel": "low",
      "userImpact": "high",
      "dependencies": [],
      "integrationPoints": [],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "core",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "High user impact requires core placement for simplicity",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:41.130Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-22T09:23:47.898Z",
        "lastIntegrated": "2025-09-25T09:41:41.193Z",
        "status": "active"
      }
    },
    {
      "name": "validate-environment",
      "path": "scripts/validate-environment.sh",
      "type": "utility",
      "purpose": "validate",
      "riskLevel": "low",
      "userImpact": "high",
      "dependencies": [],
      "integrationPoints": [],
      "constraints": [
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "core",
        "integration": {
          "includeInStatus": false,
          "includeInSync": false,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "High user impact requires core placement for simplicity",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-25T09:41:41.194Z"
      },
      "lifecycle": {
        "created": "2025-09-23 17:44:24 +0900",
        "lastUpdated": "2025-09-23T08:29:27.562Z",
        "lastIntegrated": "2025-09-25T09:41:41.254Z",
        "status": "active"
      }
    },
    {
      "name": "verify_bundle_contents",
      "path": "scripts/ci/verify_bundle_contents.ts",
      "type": "utility",
      "purpose": "test, check",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path",
        "glob"
      ],
      "integrationPoints": [],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": false,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Status integration requires health metrics and summary",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:49.527Z"
      },
      "lifecycle": {
        "created": "2025-09-22 18:26:51 +0900",
        "lastUpdated": "2025-09-23T08:53:34.772Z",
        "lastIntegrated": "2025-09-25T09:41:49.586Z",
        "status": "active"
      }
    },
    {
      "name": "workaround-detector",
      "path": "scripts/workaround-detector.ts",
      "type": "utility",
      "purpose": "sync, fix, test",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path",
        "child_process"
      ],
      "integrationPoints": [
        "unified-dashboard"
      ],
      "constraints": [
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": false,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": true,
        "violations": [],
        "lastChecked": "2025-09-25T09:41:41.067Z"
      },
      "lifecycle": {
        "created": "2025-09-25T09:41:41.128Z",
        "lastUpdated": "2025-09-25T07:48:32.466Z",
        "lastIntegrated": "2025-09-25T09:41:41.128Z",
        "status": "active"
      }
    },
    {
      "name": "workaround-resolution-engine",
      "path": "scripts/lib/workaround-resolution-engine.ts",
      "type": "system",
      "purpose": "status, sync, fix, test, check",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path",
        "child_process",
        "./auto-fix-manager.js"
      ],
      "integrationPoints": [],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "System/internal/engine components hidden in internal layer",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-26T01:32:25.727Z"
      },
      "lifecycle": {
        "created": "2025-09-26T01:32:25.788Z",
        "lastUpdated": "2025-09-25T10:33:49.786Z",
        "lastIntegrated": "2025-09-26T01:32:25.788Z",
        "status": "active"
      }
    },
    {
      "name": "workflow-completeness-auditor",
      "path": "scripts/workflow-completeness-auditor.ts",
      "type": "utility",
      "purpose": "security, sync, fix, check, git, audit",
      "riskLevel": "low",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path",
        "child_process",
        "util"
      ],
      "integrationPoints": [],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:41.014Z"
      },
      "lifecycle": {
        "created": "2025-09-25 13:25:09 +0900",
        "lastUpdated": "2025-09-25T04:30:55.608Z",
        "lastIntegrated": "2025-09-25T09:41:41.065Z",
        "status": "active"
      }
    },
    {
      "name": "workflow-gap-detector",
      "path": "scripts/workflow-gap-detector.ts",
      "type": "utility",
      "purpose": "sync, check",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "child_process",
        "fs",
        "path",
        "glob"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": false,
          "includeInShip": false
        },
        "constraints": [
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Sync/git/commit components integrated into sync workflow",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:40.930Z"
      },
      "lifecycle": {
        "created": "2025-09-25T09:41:41.012Z",
        "lastUpdated": "2025-09-25T08:03:00.694Z",
        "lastIntegrated": "2025-09-25T09:41:41.012Z",
        "status": "active"
      }
    },
    {
      "name": "workflow-prevention-system",
      "path": "scripts/workflow-prevention-system.ts",
      "type": "system",
      "purpose": "status, security, sync, fix, check, git, audit",
      "riskLevel": "medium",
      "userImpact": "low",
      "dependencies": [
        "fs",
        "path",
        "child_process"
      ],
      "integrationPoints": [
        "package.json"
      ],
      "constraints": [
        "MUST_PASS_FOR_DEPLOYMENT",
        "AUTO_INCLUDE_IN_HEALTH_METRICS",
        "MUST_PROVIDE_STATUS_SUMMARY",
        "MUST_BE_ATOMIC_OPERATION",
        "MUST_SUPPORT_ROLLBACK",
        "MUST_HAVE_COMPONENT_METADATA"
      ],
      "designDecision": {
        "placement": "internal",
        "integration": {
          "includeInStatus": true,
          "includeInSync": true,
          "includeInFix": true,
          "includeInShip": false
        },
        "constraints": [
          "MUST_PASS_FOR_DEPLOYMENT",
          "AUTO_INCLUDE_IN_HEALTH_METRICS",
          "MUST_PROVIDE_STATUS_SUMMARY",
          "MUST_BE_ATOMIC_OPERATION",
          "MUST_SUPPORT_ROLLBACK",
          "MUST_HAVE_COMPONENT_METADATA"
        ],
        "approvalRequired": false,
        "reasoning": [
          "Status/health/check components integrated into unified dashboard",
          "Security components mandatory in status for safety",
          "Sync/git/commit components integrated into sync workflow",
          "Fix/repair/lint components integrated into fix workflow",
          "System/internal/engine components hidden in internal layer",
          "Status integration requires health metrics and summary",
          "Sync integration requires atomic operations and rollback support",
          "All components must have metadata for automatic consistency"
        ]
      },
      "compliance": {
        "isCompliant": false,
        "violations": [
          "Required integration with unified-dashboard missing"
        ],
        "lastChecked": "2025-09-25T09:41:40.791Z"
      },
      "lifecycle": {
        "created": "2025-09-25 13:25:09 +0900",
        "lastUpdated": "2025-09-25T04:30:55.622Z",
        "lastIntegrated": "2025-09-25T09:41:40.927Z",
        "status": "active"
      }
    }
  ],
  "integrationHealth": {
    "unifiedDashboard": 8.83977900552486,
    "packageJson": 51.93370165745856,
    "coreCommands": 8,
    "documented": 2.209944751381215
  }
}